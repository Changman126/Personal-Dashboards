<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0216.1925                               -->
<workbook source-build='10.2.0 (10200.17.0216.1925)' source-platform='win' version='10.2' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='TheFantasyBachelor2017-TheVLeague' path='/workbooks' revision='2.3' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Tableau Set Up (Vanessa Bach League)' inline='true' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Vanessa Bach League' name='excel-direct.0e99zuy1rxwjb71awir0u1q46vh0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ochang/My Documents/GitHub/Whaleshit-Fantasy-Football/Vanessa Bach League.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0e99zuy1rxwjb71awir0u1q46vh0' name='Tableau Set Up' table='[&apos;Tableau Set Up$&apos;]' type='table'>
          <columns gridOrigin='A1:P65:no:A1:P65:0' header='yes' outcome='6'>
            <column datatype='string' name='Team' ordinal='0' />
            <column datatype='string' name='Contestant' ordinal='1' />
            <column datatype='integer' name='Ep1' ordinal='2' />
            <column datatype='integer' name='Ep2' ordinal='3' />
            <column datatype='integer' name='Ep3' ordinal='4' />
            <column datatype='integer' name='Ep4' ordinal='5' />
            <column datatype='integer' name='Ep5' ordinal='6' />
            <column datatype='integer' name='Ep6' ordinal='7' />
            <column datatype='integer' name='Ep7' ordinal='8' />
            <column datatype='integer' name='Ep8' ordinal='9' />
            <column datatype='integer' name='Ep9' ordinal='10' />
            <column datatype='integer' name='WTL' ordinal='11' />
            <column datatype='integer' name='Ep10' ordinal='12' />
            <column datatype='integer' name='Ep11' ordinal='13' />
            <column datatype='string' name='Status' ordinal='14' />
            <column datatype='integer' name='Grand Total' ordinal='15' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Contestant</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Contestant]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Contestant</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep1]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep1</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep2]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep2</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep3]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep3</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep4</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep4]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep4</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep5</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep5]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep5</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep6</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep6]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep6</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep7</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep7]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep7</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep8</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep8]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep8</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep9</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep9]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep9</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WTL</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WTL]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>WTL</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep10</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep10]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep10</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep11</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep11]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep11</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Grand Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Grand Total]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Grand Total</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:P65:no:A1:P65:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
      <group caption='Action (Contestant)' hidden='true' name='[Action (Contestant)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Contestant]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/ochang/My Documents/My Tableau Repository/Datasources/Tableau Set Up (Vanessa Bach League).tde' schema='Extract' tablename='Extract' update-time='03/14/2017 07:33:13 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='64' timestamp-start='2017-03-14 19:33:13.580' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Contestant</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Contestant]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Contestant</remote-alias>
              <ordinal>0</ordinal>
              <family>Tableau Set Up</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alexis&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Whitney&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep10</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep10]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep10</remote-alias>
              <ordinal>1</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1470.0</statistic>
                <statistic aggregation='Avg' datatype='real'>22.96875</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>190</statistic>
                <statistic aggregation='Stdev' datatype='real'>59.606638798785568</statistic>
                <statistic aggregation='StdevP' datatype='real'>59.13912853126515</statistic>
                <statistic aggregation='Var' datatype='real'>3552.9513888888887</statistic>
                <statistic aggregation='VarP' datatype='real'>3497.4365234375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>257600.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep11</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep11]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep11</remote-alias>
              <ordinal>2</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2765.0</statistic>
                <statistic aggregation='Avg' datatype='real'>43.203125</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>335</statistic>
                <statistic aggregation='Stdev' datatype='real'>106.17583195655529</statistic>
                <statistic aggregation='StdevP' datatype='real'>105.34306747591117</statistic>
                <statistic aggregation='Var' datatype='real'>11273.307291666666</statistic>
                <statistic aggregation='VarP' datatype='real'>11097.161865234375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>829675.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep1</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep1</remote-alias>
              <ordinal>3</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1825.0</statistic>
                <statistic aggregation='Avg' datatype='real'>28.515625</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>65</statistic>
                <statistic aggregation='Stdev' datatype='real'>10.144968551196298</statistic>
                <statistic aggregation='StdevP' datatype='real'>10.065398941888741</statistic>
                <statistic aggregation='Var' datatype='real'>102.9203869047619</statistic>
                <statistic aggregation='VarP' datatype='real'>101.312255859375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>58525.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep2</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep2</remote-alias>
              <ordinal>4</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1525.0</statistic>
                <statistic aggregation='Avg' datatype='real'>23.828125</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>145</statistic>
                <statistic aggregation='Stdev' datatype='real'>36.825868533599696</statistic>
                <statistic aggregation='StdevP' datatype='real'>36.537033732698866</statistic>
                <statistic aggregation='Var' datatype='real'>1356.1445932539682</statistic>
                <statistic aggregation='VarP' datatype='real'>1334.954833984375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>121775.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep3</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep3</remote-alias>
              <ordinal>5</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3050.0</statistic>
                <statistic aggregation='Avg' datatype='real'>47.65625</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>115</statistic>
                <statistic aggregation='Stdev' datatype='real'>39.999689978957313</statistic>
                <statistic aggregation='StdevP' datatype='real'>39.685962076501305</statistic>
                <statistic aggregation='Var' datatype='real'>1599.9751984126983</statistic>
                <statistic aggregation='VarP' datatype='real'>1574.9755859375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>246150.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep4</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep4</remote-alias>
              <ordinal>6</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2595.0</statistic>
                <statistic aggregation='Avg' datatype='real'>40.546875</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>130</statistic>
                <statistic aggregation='Stdev' datatype='real'>41.357109017312141</statistic>
                <statistic aggregation='StdevP' datatype='real'>41.032734526648049</statistic>
                <statistic aggregation='Var' datatype='real'>1710.4104662698412</statistic>
                <statistic aggregation='VarP' datatype='real'>1683.685302734375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>212975.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep5</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep5</remote-alias>
              <ordinal>7</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2135.0</statistic>
                <statistic aggregation='Avg' datatype='real'>33.359375</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>170</statistic>
                <statistic aggregation='Stdev' datatype='real'>41.567068462372418</statistic>
                <statistic aggregation='StdevP' datatype='real'>41.241047205537534</statistic>
                <statistic aggregation='Var' datatype='real'>1727.8211805555557</statistic>
                <statistic aggregation='VarP' datatype='real'>1700.823974609375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>180075.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep6</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep6</remote-alias>
              <ordinal>8</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3120.0</statistic>
                <statistic aggregation='Avg' datatype='real'>48.75</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>140</statistic>
                <statistic aggregation='Stdev' datatype='real'>50.174299371892751</statistic>
                <statistic aggregation='StdevP' datatype='real'>49.780769379349692</statistic>
                <statistic aggregation='Var' datatype='real'>2517.4603174603176</statistic>
                <statistic aggregation='VarP' datatype='real'>2478.125</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>310700.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep7</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep7</remote-alias>
              <ordinal>9</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1990.0</statistic>
                <statistic aggregation='Avg' datatype='real'>31.09375</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>105</statistic>
                <statistic aggregation='Stdev' datatype='real'>44.955610822726506</statistic>
                <statistic aggregation='StdevP' datatype='real'>44.603012352726807</statistic>
                <statistic aggregation='Var' datatype='real'>2021.0069444444443</statistic>
                <statistic aggregation='VarP' datatype='real'>1989.4287109375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>189200.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep8</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep8]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep8</remote-alias>
              <ordinal>10</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1550.0</statistic>
                <statistic aggregation='Avg' datatype='real'>24.21875</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>115</statistic>
                <statistic aggregation='Stdev' datatype='real'>46.292880164969795</statistic>
                <statistic aggregation='StdevP' datatype='real'>45.929793146034307</statistic>
                <statistic aggregation='Var' datatype='real'>2143.030753968254</statistic>
                <statistic aggregation='VarP' datatype='real'>2109.5458984375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>172550.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep9</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep9]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep9</remote-alias>
              <ordinal>11</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>990.0</statistic>
                <statistic aggregation='Avg' datatype='real'>15.46875</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>170</statistic>
                <statistic aggregation='Stdev' datatype='real'>41.925091456677748</statistic>
                <statistic aggregation='StdevP' datatype='real'>41.596262133003009</statistic>
                <statistic aggregation='Var' datatype='real'>1757.7132936507937</statistic>
                <statistic aggregation='VarP' datatype='real'>1730.2490234375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>126050.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Grand Total</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Grand Total]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Grand Total</remote-alias>
              <ordinal>12</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>24020.0</statistic>
                <statistic aggregation='Avg' datatype='real'>375.3125</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1035</statistic>
                <statistic aggregation='Stdev' datatype='real'>337.66926972155125</statistic>
                <statistic aggregation='StdevP' datatype='real'>335.02084240200639</statistic>
                <statistic aggregation='Var' datatype='real'>114020.53571428571</statistic>
                <statistic aggregation='VarP' datatype='real'>112238.96484375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>16198300.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>13</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>64.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>64.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Status</remote-alias>
              <ordinal>14</ordinal>
              <family>Tableau Set Up</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Eliminated&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Winner&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Eliminated&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Team</remote-alias>
              <ordinal>15</ordinal>
              <family>Tableau Set Up</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Allie&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Vanessa&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WTL</remote-name>
              <remote-type>16</remote-type>
              <local-name>[WTL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WTL</remote-alias>
              <ordinal>16</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1005.0</statistic>
                <statistic aggregation='Avg' datatype='real'>15.703125</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>50</statistic>
                <statistic aggregation='Stdev' datatype='real'>20.429266034644655</statistic>
                <statistic aggregation='StdevP' datatype='real'>20.269034023218151</statistic>
                <statistic aggregation='Var' datatype='real'>417.35491071428572</statistic>
                <statistic aggregation='VarP' datatype='real'>410.833740234375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>42075.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.322802' measure-ordering='alphabetic' measure-percentage='0.677198' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Contestant:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Danielle M.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alexis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brittany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jasmine B.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Christen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Raven&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Angela&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vanessa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lauren&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Corinne&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Josephine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kristina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liz&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sarah&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hailey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Danielle L.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Astrid&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Whitney&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lacey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jaimi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Briana&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='The Bachelor Fantasy 2017 - The V League' type='sheet' worksheet='Contestant Filter' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='The Bachelor Fantasy 2017 - The V League' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Contestant Filter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Scoring Pie'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[pcto:sum:Grand Total:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Contestant]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]'>
            <groupfilter function='level-members' level='[Contestant]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
              <wedge-size column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' />
              <lod column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[pcto:sum:Grand Total:qk:4]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Weekly Scoring by Episode'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep10]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep11]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep6]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep8]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep9]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column datatype='integer' name='[WTL]' role='measure' type='quantitative' />
            <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep10]' derivation='Sum' name='[sum:Ep10:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep11]' derivation='Sum' name='[sum:Ep11:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep6]' derivation='Sum' name='[sum:Ep6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep7]' derivation='Sum' name='[sum:Ep7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep8]' derivation='Sum' name='[sum:Ep8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep9]' derivation='Sum' name='[sum:Ep9:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WTL]' derivation='Sum' name='[sum:WTL:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]'>
            <groupfilter function='level-members' level='[Contestant]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='5' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep5:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='6' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep6:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='7' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep7:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='8' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep8:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='9' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep9:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='10' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep10:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='11' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:WTL:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='12' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep11:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep5:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep6:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep7:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep8:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep9:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep10:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:WTL:qk] + [federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep11:qk])))))))))))</rows>
        <cols>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Weekly Scoring by Team'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep10]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep11]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep6]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep8]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep9]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column datatype='integer' name='[WTL]' role='measure' type='quantitative' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep10]' derivation='Sum' name='[sum:Ep10:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep11]' derivation='Sum' name='[sum:Ep11:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep6]' derivation='Sum' name='[sum:Ep6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep7]' derivation='Sum' name='[sum:Ep7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep8]' derivation='Sum' name='[sum:Ep8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep9]' derivation='Sum' name='[sum:Ep9:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WTL]' derivation='Sum' name='[sum:WTL:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep6:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep7:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep8:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep9:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep10:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:WTL:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep11:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep5:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep6:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep7:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep8:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep9:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep10:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:WTL:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep11:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]'>
            <groupfilter function='level-members' level='[Contestant]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' direction='DESC' using='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' />
          <slices>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</rows>
        <cols>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Weekly Scoring by Team and Contestant'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep10]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep11]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep6]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep8]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep9]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column datatype='integer' name='[WTL]' role='measure' type='quantitative' />
            <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep10]' derivation='Sum' name='[sum:Ep10:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep11]' derivation='Sum' name='[sum:Ep11:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep6]' derivation='Sum' name='[sum:Ep6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep7]' derivation='Sum' name='[sum:Ep7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep8]' derivation='Sum' name='[sum:Ep8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep9]' derivation='Sum' name='[sum:Ep9:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WTL]' derivation='Sum' name='[sum:WTL:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep6:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep7:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep8:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep9:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep10:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:WTL:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep11:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep5:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep6:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep7:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep8:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep9:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep10:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:WTL:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep11:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]'>
            <groupfilter function='level-members' level='[Contestant]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' direction='DESC' using='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' />
          <sort class='alphabetic' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Status:nk]' direction='DESC' />
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' direction='ASC' />
          <slices>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk] / ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Status:nk] / [federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]))</rows>
        <cols>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</column>
        </subtotals>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='The Bachelor Fantasy 2017 - The V League'>
      <style />
      <size maxheight='2000' maxwidth='1800' minheight='2000' minwidth='1800' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
      </datasources>
      <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
        <column datatype='string' name='[Team]' role='dimension' type='nominal' />
        <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='14' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='12' param='horz' type='layout-flow' w='99778' x='0' y='0'>
              <zone h='100000' id='9' param='horz' type='layout-flow' w='99778' x='0' y='0'>
                <zone h='100000' id='7' type='layout-basic' w='99778' x='0' y='0'>
                  <zone forceUpdate='true' h='22150' id='1' is-centered='0' is-scaled='1' param='C:/Users/ochang/Pictures/nick-viall-broke-bachelor-2017-winner-already-engaged-or-not-nick-may-not-feel-hes.jpg' type='bitmap' w='36222' x='0' y='0' />
                  <zone h='20700' id='3' name='Weekly Scoring by Team' w='49892' x='0' y='22150' />
                  <zone h='48350' id='4' name='Weekly Scoring by Team and Contestant' w='49886' x='49892' y='22150' />
                  <zone h='26050' id='5' name='Contestant Filter' w='49892' x='0' y='42850' />
                  <zone h='29500' id='6' name='Scoring Pie' w='49886' x='49892' y='70500' />
                  <zone h='29500' id='10' name='Weekly Scoring by Episode' w='49892' x='0' y='70500' />
                  <zone h='1600' id='15' mode='checkdropdown' name='Scoring Pie' param='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' type='filter' w='49892' x='0' y='68900' />
                  <zone forceUpdate='true' h='22150' id='16' is-scaled='1' param='C:/Users/ochang/Pictures/Bach.PNG' type='bitmap' w='63556' x='36222' y='0' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Weekly Scoring by Team'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Weekly Scoring by Team and Contestant'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Scoring Pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Weekly Scoring by Episode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Contestant Filter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' maximized='true' name='The Bachelor Fantasy 2017 - The V League'>
      <viewpoints>
        <viewpoint name='Contestant Filter'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Scoring Pie'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weekly Scoring by Episode'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Weekly Scoring by Team'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weekly Scoring by Team and Contestant'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='16' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Contestant Filter' width='64'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Scoring Pie' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAP50lEQVR4nO3dWWxc132A8e/cZXZyhtuIFK3FcizJq2zZli0bsGPYSZ1uQdOHJn0r0AJB
      H/taFO1DW7QFinQBihaJUyBB4sCo3SQ17CSu6yxeJdmWrN2WJUqkRIriPsOZuXOX0wdaTiKL
      EpeZuTM6/98LAYmcewjdT3PmzJl7ldZaI4SBlFLKinsQQsRJAhBGkwCE0SQAYTQJQBhNAhBG
      kwCE0SQAYTQJQBhNAhBGkwCE0SQAYTQJQBhNAhBGkwCE0SQAYTQJQBhNAhBGkwCE0SQAYTQJ
      QBjNWe4vzp49S6VSaeVYhGg5JZdFEaaSy6II40kAwmgSgDCaBCCMJgEIo0kAwmgSgDCaBCCM
      JgEIo0kAwmgSgDCaBCCMJgEIo0kAwmgSgDCaBCCMJgEIo0kAwmgSgDCaBCCMJgEIo0kAwmgS
      gDCaBCCMJgEIo0kAwmgSgDCaBCCMJgEIoy17eXRxY9JBDV2dQ1dn0fVFdHUW6ovoyjTBQpJQ
      D2F3d2NlM6hEAqurC3dwMO5hN40EYIioPEk4+jbB6Z8SLVwAv4oO67/8Wq9QO99P7dJmrFQK
      5brg2KhkEqevn8StnyH78F6cgYG4f5WGkvsD3KB0vUJUGiccP0Rw5ueEYwfAr0DoA1f/J6+e
      L1IbW+Z/e9tGuS7OwACZvQ+RvP023OFhrFwOpVTzfpEmUkopCeAGo6OAaPoj/OP/g3/4v6Be
      XvHPXjOAK6hkkuQ995L+jd8ls20jdiqx1iHHRimlZAp0A4lKEwQnXsQ/9TLR5HGIgqYdS3se
      84dHmJl/le67tlF4YCfpmwZQVmetq8gzQIfTWoO/SHDuLepv/QfR3Nmlqc4arOYZQCubSu9t
      hMk82DZuIUvfI3fR99gugI6YFskUqMNpHRHNnMZ/99v4x3/48fx+7VYagAb8TJFa/maw3F/7
      u/TWQTZ8YQ+ZrUNYjr2u8TSb3COsg+mgRjh+mNqP/hz/yHPrPvlXdWwrQZDq+9TJD1AdmWD8
      v19j7t0P0EHYsjGtlbwG6EA6qBGMvE79wDeJJo+29thAmOgiSOaX/R5vYoaLL75FVPHo/+w9
      rRvcGkgAHUb7Vfxj36e+72l0+WLrB6Bs/HQfWNc+dcJSlcmXD+BNz1N8YjduoatFA1wdmQJ1
      EB3U8Y/9AO8XX0OXJ1huPb+ZQjdLkCmu6HujWp25fSeYefMYode6KdpqSAAdJLx4mPr+b6x5
      lWe9NBZ+ZnXvBOsgZOb1IywcOtWkUa2PBNAhotmz1Pd9HV2aiG8Mbpog1bvqnwurHpM/3o83
      Nd+EUa2PBNDmtNZElRm8/d8gPPtGbOOIlE09PYC+ysrPSvhzZUa/9WOq56dop5V3CaDdhXX8
      Q88QnHwRdBTbMCI3Q5jqgXWsnNfGp5l69T2ChXimcFcjAbS5qDSBf+R5CLzYxqBRhIk8kZ1a
      3wNFmvLJc5RPnkOH8cX8qySANue/++14ljt/RWQn8dP9YK3/nd2w4jG77zhhNb6gf5UE0MbC
      8+/gf/BSrGNY2vYwQORmG/aYlTMTLBw+3bDHWw8JoE3p+iL+sR+Ct/LtzE2hLPzMIDR4c9vM
      m0cJFmsNfcy1kADaVDhxhGBsP+h499PUM0W0k2z443oXZ5k7cKLhj7taEkAb0oFHOLYfPT8W
      6zgi5eBnNjTlsXUQUj45GvtrAQmgDenyJMHovliXPT+Z+zvpph3DuzRP9dxk0x5/JSSANqO1
      JiqNE03Hu3VA28mld32vs+ltPYJShdr4dKxLohJA29GEE++DtxDjCCBI5AkT3c09jh9QvTBF
      WItvGiQBtJsoIDj5o1iHoJVDmMo3ZN3/emoXpglK1aYfZzkSQJuJFs4TXYp3dSRMdjXtxe+V
      vPFpvMnZ2PYHSQBtRi+Mx3t8ZeGnV7bfv1G8iRmQAARAVIo3gNDJEqYKLT2mP1eO47M9wFoC
      iDymRkc4deo8i5+8R+MzNTbCvAfUZhk5P0N7fv6nA/jxzYe1cvCzG9AtvlxUfa7cOVOgcO44
      //lv/8I//OVf89r45QKmeP4f/4rXR4Ez/8df/POLzBJw6aN3ee3QCEHYPvu/210U4xQoctNL
      Kz8tvqaPrjfvAl7Xs8oANDNnPmR+0x6e2g2Hjl645jOXZTk4tgXtf42ktqFjnAKFiW4iZ51b
      ntfAny93yGuAqMzpDycZLG7lzjt3Mr7vHSaW3aoSMPnB2xwZmSMK65x77wX+9s++yh/98Z/y
      7y+doBLJs8LVNPM1gGZpb7/GIlI2oXIJlUtgJQmsFKGVXNcHXtbKn1uMLYBVTfbC+UmOjZYp
      PjZI/6Z7KL70v5y+8FsMbbrad0fUFqaZ8quUL33Eiz94mf5Hv8LjvbO8+Ow/8crWr/E7tzXv
      bfaOtY4TMFQuWtkEdmppNcfOoZVNZDkEdpbQSuI7OTyni0pqkGqyiO9k8NwCleQgfSfHGD58
      rIG/zMrY2WTLp12XrSIAzdzUKB+eOoodvcBsrsbp2VGGTo+xZ9O1nzY9b4Lx0zPo7GH8jGLT
      g0+ypblvMnYsq2uIaPzQp/48tBJEyqXudBHYaUI7Sd3JU3dyRFaCutuF5+aJVGLpq+VSSQ4S
      WglCO0k1WUSr9rxUoZVY2+eMG2HlAeiQ6XOnsAq7uP+BO8njYZXmmDg1Qunhndf80USiSO9w
      DwMP/za//9AmqrMX8R1Zgb2aoHcHE4Upasl+AjuN5xaoJot4bv7j/93TH8fgENgZQjtF9PGf
      s84TPHJsIsvCilq7N8dOdkAAOoq4NDXLlie+yG8+vh2XgFvyHs8fuEh5cQe5nj7SDkCG/oLC
      QuFmuun2E+T6t/HUFx7iO8/+DV/9esTQ3Y/xlT/8MjfWvUYa4+xNX+KQegKtLDTW0ldlt2Ru
      XtpQpNZ9jsxcay9fktzQi7LimQLJ1aHbzIdTFd4YKcV2/G2/eJPC2IWWLtz1PHQ7G7/0KMpu
      7axArg7dhnKJeOfppQ0D6Bbf5MIt5GJbKpcA2kxvJr75MMDM1s1ELbyuv0q6pDcVY1sFkgDa
      jGsrNucb/xnclQoTCar55S993mhudxa3OxPbHWUkgDajgI35eG84N7njMy07VnJDD3Y2vveD
      JIA2o5SiN+PixLQqAlDpKRC2YhpkW6RvGsDOtn77xWUSQBtKuYreTHz3LgkTLnPDG5t+nEQh
      R2bLYKz3EpMA2lDCtuhNO8T1JBAmEswPD6GbPC93+7pJDa3+cuuNJAG0oaRjsbknSTbGJdF6
      Jo2Xa9zlEK+kXIf83dtwujJNO8ZKSABtqi/rMtSViG0nebWnQLm/r2mP7xay5O+9tWmPv1IS
      QJtK2BY7imlSbjz/RJHj4HVliZrx7qylKH7+AexUfMu9nwwl7gGI5fVmXLb2xLdCMrv5JuqZ
      xk9RsrcMk9uxueGPuxYSQJu7tT9FV0yvBbyuLuqZxq7R27k0PXt2Yqfifa/jMgmgzXWnHG7p
      j/dZoGEsi67btpC79aaWb3xbTnuMQizLUrBjIMPOgTR2DK+Ip7dtbdhyaNftWyh+7j7sXPt8
      ElACaHNKKVKuxa6NOYZj2COklWrIapBbyNH/2C4SffnY9v1cjQTQIZYiyNKVbP3rgUu3blvX
      z9u5FMWn9pDd1vx3l1dLAuggvRmXvVu6W/uZAaXwunIE7tq2aauEQ/9n7yV/T+s22K2GBNBh
      NuRcdg/n6G7hM4GXy67pxbCVTlL83P30PXInlhvf3qZrac9RiWVZlmJzT5KEozh6scL4Qr3p
      xwwTCaqFPFop1Ao/QZssFujZewf9j+5q8ujWRwLoQLalGM4v7RV6Z6zE2HzzI6gW8ni5LKnS
      de5aaVukhvooPnkfXXdsbfq41ksC6GD5lM2Dm7tJjZc5O+PhN/Fqe4v9vVQLeZKl8rL7k5Rr
      k9u5meLnHyC1oRfV4s8Wr4VcFeIG4IcRk2WfoxMVLi36BE0KYfDoCYaOHse64p5eyrFJ9Ocp
      7N5Oz947cDLx7/FZCaWUkgBuIJV6yNlZj9E5j4vlOo3uILFYYcdPXiVR++UNrt2eHIX7d9B1
      +1bSw/0ouz2vPnc1SqkWXwheNFUmYbOjmOamQpIL8x7vni9Tb+Cl6evZDEE6SaJWQyVcuu+6
      mb5H7iI11Bvr5Q3XQ54BblCR1vih5tKiz+npGtOLPrUgwg/1qm/GYilwLEXCVmwszbHTCcjc
      MoRb6ELZVlu9s7saMgUySLUecqFUZ6rsU6qH1ANNEGnCj0OpBxGapcuyJCwL++MT3rYVfRmH
      QsqhmHPJJe2OPeGvJAEYKIw09TDCuxxApKmHGi+I0BoSjiJhWzjW0odyHFvF+tHMZpIAhNHk
      2qDCeBKAMJoEIIwmAQijSQDCaBKAMJoEIIwmAQijSQDCaBKAMJoEIIwmAQijSQDCaBKAMJoE
      IIwmAQijSQDCaBKAMJoEIIwmAQijSQDCaBKAMJoEIIwmAQijSQDCaBKAMJoEIIwmAQijSQDC
      aBKAMJoEIIwmAQijSQDCaBKAMJoEIIwmAQijSQDCaBKAMJoEIIwmAQijSQDCaBKAMJoEIIwm
      AQijSQDCaBKAMJoEIIwmAQijSQDCaBKAMJoEIIwmAQijSQDCaBKAMJoEIIwmAQijSQDCaBKA
      MJoEIIwmAQijSQDCaE7cAxCtpf0KunyJaHESXZtHly8tfS1NcFANcbJ7F/25HN3JFGnXpTeb
      ZVtff9zDbhoJ4AamtYbQh9Ajmh8lOPMawUevoEsX0VEAOoQogGjp60lnN88lIxzLxrYUSikc
      y6I7leKOwY08uX0HGwsFUo6Da9lYVudPICSAG1S0OEV08SjhxGGC0beJJg4vnezXoLUmiCKC
      KPq1P5+rVjk3O8tLx4/Sm8nw4Jat3D44xI7iBobzBZRSzfxVmkpprXXcgxCNo8M64YWD+Eee
      J/joFfCrK/7Z55z7eDaxZ0Xf69o22weKPH7rdh65+Rby6fRahxwbpZSSZ4AbSDh3Dv+97xCc
      +Tl64Tzo6Po/tEZ+GHJ0YpyRmWn2nTvLF++8m7s3DmN32LRIAuhwWkfohQv4H/yE+oGnwSs1
      9cS/0mK9zr6zIxwcG+WJ7Tv48u776UlncGy7ZWNYDwmgg+koJBw7gH/wuwRnfnbdOX4z1cOQ
      l44f48TkRf7gnvvYs2UrKdeNbTwrJQF0KF2vEJx/B++nf4eeOxv3cD5xZnqab779JuML8/ze
      rntI2O19inXWhE2gtUb7FYJTL+P97O/b6uS/bLJc4tmD7/Kt/W8TaU07r7O0d57iU3Rtjvr+
      p/EPPQOBF/dwllX1fb7//iFGpqf5k72PsKW3L+4hXZU8A3QQ7VfxD30P/9D32vrkvyzSmvcv
      nOeFo0co1WpxD+eqJIAOEp5/B//gMxC058l0NUEU8cqHJ3n55PG4h3JVEkAH0FoTThzBe+Nf
      0dWZuIezajXf57vvHODExQnCqHVLtCvx/wlDjUCDzxbKAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='The Bachelor Fantasy 2017 - The V League' width='192'>
      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
      /65wXjkzMl8jAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Weekly Scoring by Episode' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Weekly Scoring by Team' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Weekly Scoring by Team and Contestant' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
