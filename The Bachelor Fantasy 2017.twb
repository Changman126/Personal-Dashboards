<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0216.1925                               -->
<workbook source-build='10.2.0 (10200.17.0216.1925)' source-platform='win' version='10.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Picks (Bachelor Fantasy 2017)' inline='true' name='federated.0j2cl1k15o1a4a1apxiif1ogtj8j' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Bachelor Fantasy 2017' name='excel-direct.0kejm901tftsm81h312710ja0fd2'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ochang/My Documents/GitHub/Whaleshit-Fantasy-Football/Bachelor Fantasy 2017.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0kejm901tftsm81h312710ja0fd2' name='Picks' table='[Picks$]' type='table'>
          <columns gridOrigin='A1:P21:no:A1:P21:0' header='yes' outcome='6'>
            <column datatype='string' name='Team' ordinal='0' />
            <column datatype='string' name='Contestants' ordinal='1' />
            <column datatype='integer' name='Ep1' ordinal='2' />
            <column datatype='integer' name='Ep2' ordinal='3' />
            <column datatype='integer' name='Ep3' ordinal='4' />
            <column datatype='integer' name='Ep4' ordinal='5' />
            <column datatype='integer' name='Ep5' ordinal='6' />
            <column datatype='integer' name='Ep6' ordinal='7' />
            <column datatype='integer' name='Ep7' ordinal='8' />
            <column datatype='integer' name='Ep8' ordinal='9' />
            <column datatype='integer' name='Ep9' ordinal='10' />
            <column datatype='integer' name='WTL' ordinal='11' />
            <column datatype='integer' name='Ep10' ordinal='12' />
            <column datatype='integer' name='Ep11' ordinal='13' />
            <column datatype='string' name='Status' ordinal='14' />
            <column datatype='integer' name='Grand Total' ordinal='15' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Contestants</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Contestants]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Contestants</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep1]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep1</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep2]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep2</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep3]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep3</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep4</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep4]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep4</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep5</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep5]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep5</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep6</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep6]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep6</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep7</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep7]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep7</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep8</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep8]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep8</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep9</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep9]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep9</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WTL</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WTL]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>WTL</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep10</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep10]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep10</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep11</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep11]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep11</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Grand Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Grand Total]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Grand Total</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Picks]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:P21:no:A1:P21:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/ochang/My Documents/My Tableau Repository/Datasources/Picks (Bachelor Fantasy 2017).tde' schema='Extract' tablename='Extract' update-time='03/14/2017 07:28:00 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='20' timestamp-start='2017-03-14 19:28:00.065' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Contestants</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Contestants]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Contestants</remote-alias>
              <ordinal>0</ordinal>
              <family>Picks</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Brittany&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Sarah&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep10</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep10]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep10</remote-alias>
              <ordinal>1</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>130.0</statistic>
                <statistic aggregation='Avg' datatype='real'>6.5</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>130</statistic>
                <statistic aggregation='Stdev' datatype='real'>29.068883707497267</statistic>
                <statistic aggregation='StdevP' datatype='real'>28.332843133014379</statistic>
                <statistic aggregation='Var' datatype='real'>845.0</statistic>
                <statistic aggregation='VarP' datatype='real'>802.75</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>16900.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep11</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep11]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep11</remote-alias>
              <ordinal>2</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep1</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep1</remote-alias>
              <ordinal>3</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>570.0</statistic>
                <statistic aggregation='Avg' datatype='real'>28.5</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>50</statistic>
                <statistic aggregation='Stdev' datatype='real'>10.649932048214154</statistic>
                <statistic aggregation='StdevP' datatype='real'>10.380269746013347</statistic>
                <statistic aggregation='Var' datatype='real'>113.42105263157895</statistic>
                <statistic aggregation='VarP' datatype='real'>107.75</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>18400.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep2</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep2</remote-alias>
              <ordinal>4</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>675.0</statistic>
                <statistic aggregation='Avg' datatype='real'>33.75</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>145</statistic>
                <statistic aggregation='Stdev' datatype='real'>44.095440747733115</statistic>
                <statistic aggregation='StdevP' datatype='real'>42.97891925118639</statistic>
                <statistic aggregation='Var' datatype='real'>1944.4078947368421</statistic>
                <statistic aggregation='VarP' datatype='real'>1847.1875</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>59725.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep3</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep3</remote-alias>
              <ordinal>5</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>745.0</statistic>
                <statistic aggregation='Avg' datatype='real'>37.25</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>115</statistic>
                <statistic aggregation='Stdev' datatype='real'>38.915394058609273</statistic>
                <statistic aggregation='StdevP' datatype='real'>37.930034273646527</statistic>
                <statistic aggregation='Var' datatype='real'>1514.4078947368421</statistic>
                <statistic aggregation='VarP' datatype='real'>1438.6875</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>56525.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep4</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep4</remote-alias>
              <ordinal>6</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>500.0</statistic>
                <statistic aggregation='Avg' datatype='real'>25.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>130</statistic>
                <statistic aggregation='Stdev' datatype='real'>34.335803011158085</statistic>
                <statistic aggregation='StdevP' datatype='real'>33.466401061363023</statistic>
                <statistic aggregation='Var' datatype='real'>1178.9473684210527</statistic>
                <statistic aggregation='VarP' datatype='real'>1120.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>34900.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep5</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep5</remote-alias>
              <ordinal>7</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>615.0</statistic>
                <statistic aggregation='Avg' datatype='real'>30.75</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>170</statistic>
                <statistic aggregation='Stdev' datatype='real'>50.269667531068976</statistic>
                <statistic aggregation='StdevP' datatype='real'>48.996811120724992</statistic>
                <statistic aggregation='Var' datatype='real'>2527.0394736842104</statistic>
                <statistic aggregation='VarP' datatype='real'>2400.6875</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>66925.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep6</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep6</remote-alias>
              <ordinal>8</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>500.0</statistic>
                <statistic aggregation='Avg' datatype='real'>25.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>140</statistic>
                <statistic aggregation='Stdev' datatype='real'>41.358509593425559</statistic>
                <statistic aggregation='StdevP' datatype='real'>40.311288741492746</statistic>
                <statistic aggregation='Var' datatype='real'>1710.5263157894738</statistic>
                <statistic aggregation='VarP' datatype='real'>1625.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>45000.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep7</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep7</remote-alias>
              <ordinal>9</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>465.0</statistic>
                <statistic aggregation='Avg' datatype='real'>23.25</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>105</statistic>
                <statistic aggregation='Stdev' datatype='real'>40.009045029974487</statistic>
                <statistic aggregation='StdevP' datatype='real'>38.995993383936252</statistic>
                <statistic aggregation='Var' datatype='real'>1600.7236842105262</statistic>
                <statistic aggregation='VarP' datatype='real'>1520.6875</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>41225.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep8</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep8]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep8</remote-alias>
              <ordinal>10</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>235.0</statistic>
                <statistic aggregation='Avg' datatype='real'>11.75</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>140</statistic>
                <statistic aggregation='Stdev' datatype='real'>36.89512162874653</statistic>
                <statistic aggregation='StdevP' datatype='real'>35.960916284210555</statistic>
                <statistic aggregation='Var' datatype='real'>1361.25</statistic>
                <statistic aggregation='VarP' datatype='real'>1293.1875</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>28625.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep9</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep9]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep9</remote-alias>
              <ordinal>11</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>90.0</statistic>
                <statistic aggregation='Avg' datatype='real'>4.5</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>45</statistic>
                <statistic aggregation='Stdev' datatype='real'>13.85070775314958</statistic>
                <statistic aggregation='StdevP' datatype='real'>13.5</statistic>
                <statistic aggregation='Var' datatype='real'>191.84210526315789</statistic>
                <statistic aggregation='VarP' datatype='real'>182.25</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4050.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Grand Total</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Grand Total]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Grand Total</remote-alias>
              <ordinal>12</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4735.0</statistic>
                <statistic aggregation='Avg' datatype='real'>236.75</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>795</statistic>
                <statistic aggregation='Stdev' datatype='real'>240.81700302795986</statistic>
                <statistic aggregation='StdevP' datatype='real'>234.71938032467622</statistic>
                <statistic aggregation='Var' datatype='real'>57992.82894736842</statistic>
                <statistic aggregation='VarP' datatype='real'>55093.1875</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2222875.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>13</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>20.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>20.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Status</remote-alias>
              <ordinal>14</ordinal>
              <family>Picks</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;0&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;0&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Team</remote-alias>
              <ordinal>15</ordinal>
              <family>Picks</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Bailey&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Rebecca&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;OJ&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WTL</remote-name>
              <remote-type>16</remote-type>
              <local-name>[WTL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WTL</remote-alias>
              <ordinal>16</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>210.0</statistic>
                <statistic aggregation='Avg' datatype='real'>10.5</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>45</statistic>
                <statistic aggregation='Stdev' datatype='real'>16.214029013237433</statistic>
                <statistic aggregation='StdevP' datatype='real'>15.803480629279107</statistic>
                <statistic aggregation='Var' datatype='real'>262.89473684210526</statistic>
                <statistic aggregation='VarP' datatype='real'>249.75</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>7200.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.325549' measure-ordering='alphabetic' measure-percentage='0.674451' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='The Bachelor Fantasy 2017' type='sheet' worksheet='Contestant Filter' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='The Bachelor Fantasy 2017' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Contestant Filter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Picks (Bachelor Fantasy 2017)' name='federated.0j2cl1k15o1a4a1apxiif1ogtj8j' />
          </datasources>
          <datasource-dependencies datasource='federated.0j2cl1k15o1a4a1apxiif1ogtj8j'>
            <column datatype='string' name='[Contestants]' role='dimension' type='nominal' />
            <column-instance column='[Contestants]' derivation='None' name='[none:Contestants:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Scoring Pie'>
      <table>
        <view>
          <datasources>
            <datasource caption='Picks (Bachelor Fantasy 2017)' name='federated.0j2cl1k15o1a4a1apxiif1ogtj8j' />
          </datasources>
          <datasource-dependencies datasource='federated.0j2cl1k15o1a4a1apxiif1ogtj8j'>
            <column datatype='string' name='[Contestants]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Contestants]' derivation='None' name='[none:Contestants:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[pcto:sum:Grand Total:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[Contestants]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
              <wedge-size column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]' />
              <tooltip column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[pcto:sum:Grand Total:qk:4]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Weekly Score by Team'>
      <table>
        <view>
          <datasources>
            <datasource caption='Picks (Bachelor Fantasy 2017)' name='federated.0j2cl1k15o1a4a1apxiif1ogtj8j' />
          </datasources>
          <datasource-dependencies datasource='federated.0j2cl1k15o1a4a1apxiif1ogtj8j'>
            <column datatype='integer' name='[Ep10]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep11]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep6]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep8]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep9]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column datatype='integer' name='[WTL]' role='measure' type='quantitative' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep10]' derivation='Sum' name='[sum:Ep10:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep11]' derivation='Sum' name='[sum:Ep11:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep6]' derivation='Sum' name='[sum:Ep6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep7]' derivation='Sum' name='[sum:Ep7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep8]' derivation='Sum' name='[sum:Ep8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep9]' derivation='Sum' name='[sum:Ep9:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WTL]' derivation='Sum' name='[sum:WTL:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep6:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep7:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep8:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep9:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep10:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:WTL:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep11:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]&quot;</bucket>
              <bucket>&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk]&quot;</bucket>
              <bucket>&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk]&quot;</bucket>
              <bucket>&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep5:qk]&quot;</bucket>
              <bucket>&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep6:qk]&quot;</bucket>
              <bucket>&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep7:qk]&quot;</bucket>
              <bucket>&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep8:qk]&quot;</bucket>
              <bucket>&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep9:qk]&quot;</bucket>
              <bucket>&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep10:qk]&quot;</bucket>
              <bucket>&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:WTL:qk]&quot;</bucket>
              <bucket>&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep11:qk]&quot;</bucket>
              <bucket>&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]' direction='DESC' using='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]' />
          <slices>
            <column>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk]' value='N' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]' value='60' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]</rows>
        <cols>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Weekly Score by Team and Contestant'>
      <table>
        <view>
          <datasources>
            <datasource caption='Picks (Bachelor Fantasy 2017)' name='federated.0j2cl1k15o1a4a1apxiif1ogtj8j' />
          </datasources>
          <datasource-dependencies datasource='federated.0j2cl1k15o1a4a1apxiif1ogtj8j'>
            <column datatype='string' name='[Contestants]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep10]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep11]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep6]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep8]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep9]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column datatype='integer' name='[WTL]' role='measure' type='quantitative' />
            <column-instance column='[Contestants]' derivation='None' name='[none:Contestants:nk]' pivot='key' type='nominal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep10]' derivation='Sum' name='[sum:Ep10:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep11]' derivation='Sum' name='[sum:Ep11:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep6]' derivation='Sum' name='[sum:Ep6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep7]' derivation='Sum' name='[sum:Ep7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep8]' derivation='Sum' name='[sum:Ep8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep9]' derivation='Sum' name='[sum:Ep9:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WTL]' derivation='Sum' name='[sum:WTL:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep6:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep7:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep8:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep9:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep10:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:WTL:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep11:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]&quot;</bucket>
              <bucket>&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk]&quot;</bucket>
              <bucket>&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk]&quot;</bucket>
              <bucket>&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep5:qk]&quot;</bucket>
              <bucket>&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep6:qk]&quot;</bucket>
              <bucket>&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep7:qk]&quot;</bucket>
              <bucket>&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep8:qk]&quot;</bucket>
              <bucket>&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep9:qk]&quot;</bucket>
              <bucket>&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep10:qk]&quot;</bucket>
              <bucket>&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:WTL:qk]&quot;</bucket>
              <bucket>&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep11:qk]&quot;</bucket>
              <bucket>&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' direction='DESC' using='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]' />
          <sort class='alphabetic' column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Status:nk]' direction='DESC' />
          <slices>
            <column>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk]' value='N' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]' value='60' />
            <format attr='width' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Status:nk]' value='76' />
            <format attr='width' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' value='76' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk] / ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Status:nk] / [federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]))</rows>
        <cols>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]</column>
          <column>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Weekly Scoring by Episode'>
      <table>
        <view>
          <datasources>
            <datasource caption='Picks (Bachelor Fantasy 2017)' name='federated.0j2cl1k15o1a4a1apxiif1ogtj8j' />
          </datasources>
          <datasource-dependencies datasource='federated.0j2cl1k15o1a4a1apxiif1ogtj8j'>
            <column datatype='string' name='[Contestants]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep10]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep11]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep6]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep8]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep9]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column datatype='integer' name='[WTL]' role='measure' type='quantitative' />
            <column-instance column='[Contestants]' derivation='None' name='[none:Contestants:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep10]' derivation='Sum' name='[sum:Ep10:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep11]' derivation='Sum' name='[sum:Ep11:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep6]' derivation='Sum' name='[sum:Ep6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep7]' derivation='Sum' name='[sum:Ep7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep8]' derivation='Sum' name='[sum:Ep8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep9]' derivation='Sum' name='[sum:Ep9:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WTL]' derivation='Sum' name='[sum:WTL:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='5' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep5:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='6' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep6:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='7' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep7:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='8' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep8:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='9' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep9:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='10' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep10:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='11' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:WTL:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='12' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep11:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk] + ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk] + ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk] + ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk] + ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep5:qk] + ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep6:qk] + ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep7:qk] + ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep8:qk] + ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep9:qk] + ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep10:qk] + ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:WTL:qk] + [federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep11:qk])))))))))))</rows>
        <cols>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='The Bachelor Fantasy 2017'>
      <style />
      <size maxheight='1500' maxwidth='1800' minheight='1500' minwidth='1800' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='9' param='horz' type='layout-flow' w='99778' x='0' y='0'>
              <zone h='100000' id='7' type='layout-basic' w='99778' x='0' y='0'>
                <zone forceUpdate='true' h='24467' id='1' is-centered='0' is-scaled='1' param='C:/Users/ochang/Pictures/nick-viall-broke-bachelor-2017-winner-already-engaged-or-not-nick-may-not-feel-hes.jpg' type='bitmap' w='30167' x='0' y='0' />
                <zone h='12000' id='3' name='Weekly Score by Team' w='49892' x='0' y='24467' />
                <zone h='38200' id='4' name='Weekly Score by Team and Contestant' w='49886' x='49892' y='24467' />
                <zone h='26200' id='5' name='Contestant Filter' w='49892' x='0' y='36467' />
                <zone h='37333' id='6' name='Scoring Pie' w='49886' x='49892' y='62667' />
                <zone h='37333' id='10' name='Weekly Scoring by Episode' w='49892' x='0' y='62667' />
                <zone h='24467' id='13' is-centered='0' param='C:/Users/ochang/Pictures/Bach.PNG' type='bitmap' w='69611' x='30167' y='0' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Weekly Score by Team'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Weekly Score by Team and Contestant'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Contestant Filter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Scoring Pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Weekly Scoring by Episode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' maximized='true' name='The Bachelor Fantasy 2017'>
      <viewpoints>
        <viewpoint name='Contestant Filter'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Scoring Pie'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weekly Score by Team'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weekly Score by Team and Contestant'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weekly Scoring by Episode'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='13' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Contestant Filter' width='104'>
      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
    </thumbnail>
    <thumbnail height='192' name='Scoring Pie' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='The Bachelor Fantasy 2017' width='192'>
      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
    </thumbnail>
    <thumbnail height='128' name='Weekly Score by Team' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Weekly Score by Team and Contestant' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9Z3ccV5au+aT3iUQCCe9BACQIeokS5R1lqCqpqrq72tw7pj/NvfNl/kL/
      iJk1PT2zbndfU6bLyFL0DiQBwhHeeyBh0nsbbj5AoqgqqcVIJCkJwrMW1iJB5s7IyNgR5+zz
      nndrFEVR2GefHyna7/oA9tnnu2Q/AVQiyzKSJH3Xh7FPkdhPAJUIgkAmk/muD2OfIrGfAPv8
      qNlPgH1+1OwnwD4/avYTYJ8fNfsJsM+Pmv0E2OdHzX4C7POjRv9dH8Bepvf871lXLFSV1fLc
      meMPTrYsZLj0h/+Ovu0sZ081qYp564NfEzS7qHTXcuaZo+g+/31kY57b9+eIJ7P84q9+jlX/
      6Pe2a7//78Tt5VSW1/PsU4cf3BW3FicZnlsjnBD5m7/6CXqN5pFjXvrtv5IpqaSqoolnTh7k
      y1cqTPde5fJckv/jf/n5I8cDOP+rf0Z0V1NV3cLpY+0PYm7P9vNp/ypNDY288vJpVRf1fgI8
      RmLBBMffe5Mmm4WJOxfwJrSkBR0/P3uamupyZhPqF9QigQRP/cefUW3QM3TzU4JZA2nJyE/f
      eJ6fvNvMf/0//y+SoqQqASKBJGd+8pd4dHp6r35EUjaRlm387K0XeLWimn/5r78jr4D+0a9/
      ouEML73/CmU6PTcv/BFJbyWFk7eebWHcm8YoJFR/9ng0x2u/eIVSnZ4rn/weg8VGSuumRlol
      r2ipa2x4cEN4VPaHQI+VHCN9fYxMLxIKhzhw/DmMwWVCOielNmPBMe/39jI2s0IwFOLQqRfR
      +BaICmn+x3/5L5x495d4zAZVERUlw2BvLxNzq/hDYY6efgVhY4ZwTmBsZBCD2YYsqztKWUwx
      2NvL1OI6vlCEk8+9RmZtko8/+D0JQWR5aQFfPKcqpigkGOztZWZ5k61ghNMvniW2NEb7a7/k
      P/2H97jz0W+JiuqOc/8J8FjRYDAa0aNBkfKMDfYSka1Yktvcm5xnKZPAf6KZihKzqqgGkxEd
      oEg5RvrvENY4WOn+iIihkpRvjWR9BQ6jmnuhBqPJhE4DCFmG7nUTN5QSWp4gjxUln0GQFUDF
      I0CzE1MLIKQZuHuTtLmc/+lv30OTz/BPqSQVDnU3AY1Gg8FkQosCQpK+OzcQ7JUE5kdZ9UVR
      bOVYVT4CNPtyaHXkcjkEQcBut3/r/xVyWTK5PFqdnv5rf8DVeZbDjeXokUllsgCYrXaMKoYr
      +VyGbE5AqzNw++JvaTh1jrZaNxpZJJPLAxpsdjs67aNfrPlshmxeQKs3cPXjX9P1wns0VJWi
      QyKdzqI3mTEbjaiYApDLpsnlRXR6I5/84b/x/Nm/oKq8BINeB4pCNp/HbDI9ekAgl0mTE0R0
      BiO//82/8s57f01piROdRiaVzmA0WzAZ1N3THySALMtks1lVL/4xks/nkSQJi8Wi6nXZTAqd
      0YpBp+Iq+raY6RR6sxW9iov928ikUxjNVlUJ9G2kU0nMVhtaNRn0LaRSSaxWu6qk/Dq+kgC5
      nLox2Y+RfD6PKIpYrdbv+lD2KQJfOwSaud/Dsj9OWU0LTx9pQ/N5mqWCa6ynLSjxbQ50HUHN
      VCsTDzK94KWt8zAOlZM0VQgpBkcmQWei/dAhnJadcWYqEgRbKUaNjMFgQBIFNDoDam90aoZA
      D6MoMslEAp3BjMWsJx6NI2t1lDgdhd8ZFYV0KomsNWCzmEinEmgNFiym3Z1fScyTF8FsMpBO
      JtCZLJiNhcdUZIlEIoHBbMNk0JCIJVB0BlxOdefwG+MrMqlkEoPZqnoIpPuHf/iHf/jTX17/
      8DNe/Jtf0v3hb2nuaGPg7l0iOS0l+jTrERjvuUbHqRNM3LuNP61BiPvRmEvwr85jcJZj+LMh
      rcTYyBSdXe1MTi1SU1OhZjqljkyYkLaMw7U2xpd82IywvbGFyWJFFFKc//QzNAYLU303WYvm
      qShzMjk2iqCzoCePd2WZQEJAK+YwWCxEI2FMZsuDm4AkSciyjNGobgLnX5tjfG6Z4cFRmut0
      /P7COBqtTFVFRcHDDd/qFH2j86TzMg7Jz5V7M8zNzdF64EDhwyJFYfDmB9ydTVBnjnFjcJ6p
      mXkOdhwoOFHX5saZW9lgZGSKUkuSW/1LCIpMXZWnsGP8Ezbnhrg3vsz03DKH2ltUXVtfO/uS
      xATXP/uUlM6FCQm0Gj77t98QjEfY3I4CsNx3npuTfj774FdsbyzTMzLNrd5hTF+bgCJ6kxOL
      xYZZ9/jn3CuzE/QOTeDxeJibGMZcWkHMu45gKaW5tZXOjlYaGxo5euI4BjmHrNEwOjhEwO8F
      ayX5iB9ZjLK8EWV9bb0ox1TZ2MHpo21Y7A5yiTwWi0IoFEHZxZ1gamQMQc4TCIZYmPfxyrk3
      OFrlIiAIBccMrE2hLWujzGZkZTnIK2+/TlephaBc+PfW2HGMowfqsDqcSDkZjSZPOJqgWFfC
      xmaCV998jVabjojK135tAuj0Dl4/91PKxSg9d2+glLfSUFHCw+dAEASaDh7jf//P/5ljTz3D
      St9FypsPfsNChAExFyOTSZGRHtu9/wFNHV0898wJgts+7O5KqsscD/5NliRkRQEURFFiaX6J
      +raDlFj1yFoTpU4bRr0Bu6eRxNYERntFUSZvcf8qN/tnOfvWa7hqD/M3P3+HZqvEerzw3WUm
      m5MzL71OnT5JRJDI5GUygoBhF8/X0dEJfN4FxsZHSWWyZAWZtChS6KoFgH91moE5P2+8+jy1
      7af4xU/fwZXwE9xFzIfRaiRygkJGFFUNy+EbhkA6fZ6J0SnqDj/FU0c6WF1YpPFAO7W1tTid
      Lqor3XScfJ7k6hjbMZG6+no25yc49uJZSixf9wjQUOq0MD23wsHDnZhUlP1Uo9GyvjSHL5ik
      /WAbNrMJi9WKVqfHbLVi04qsB1M0NtSwNLdAY2sjSwvLVNbWUeZ2YTZbMJkMWKw2gt5NmjsP
      YXxoOFHoEGjmfi/+lMC2N4DNlOfW7T78WTjZ2YG+wMpQidNE943bpPSlvPTMIW5fvkpK7+Do
      gaaCk7alo4v25lp0plJOHW3i1pXr5CxuuprrHgwD1TLcd4dEVsAXiKEVwtztGyKhd3D8QFNR
      hsJ2q5Zb17vBVc3BhmpVMYuyDpAIrDO1mfmKPuOHTi4RZCWUp6Op5qu/L3ASvM/3kz2zEPZF
      ff5JvY/adYB9vp/sGSmEoigoigKKjCiDXqdBFCX0+i8/oiSKaHQ6ZOmrv1f7PrIss0fuGz96
      9p4YLh1gbHEbkJgYn0JRlJ1xu6KQT6fJizITE2Nf+b0iy+zkjlK0ysSfEt5c5NKlS1y4dhcp
      7+f3v/2Iq9295EWVKrOHyKeifPrB79iKCYiZMBc+/ZRrdwY/n+QXxsbCBJcvX+Jq9wC5ZIAL
      5z/les9w0RI+E9vms/OfcvPeWNHOdSq8wWfnz3N7YFJ1zL2XAMDW2gJjYxOEE1nSUT9jY+Pc
      H5vBv71BMrcjF4xsrTI6Ps7AyBTT42PkZZHxiYnHlgAOTwNvvnkWm5AksL5IVGulobEJwy4K
      AnlRprnOQ0aQWRwZ5cjr5/BoM4RyKiWRD1F7oItXX3oeKRlhamyCE6+foyQfJbaLMujDLIxP
      8/Qb57CmgySLEhHmJud49uw5DAkfaZWv3ZMJUFHXxKFDB3HZTITDYSRZIhwIfeXi3lhbIydK
      mExGWhvKmZuaxVpe99hOiFYRuHP9CtVHTlHZfJr/+f2XCEwPsZkoXH9lL3Fj/nzVMSfqsJu1
      WA0G8krhTxUpm+Du3R40ZhuiqMNq0mLTGyiWSEZQdJiNWmx6fdFiSugwGTQFxdx7CaA14LBZ
      MBgM2O02tBotGq0Wu8OOyWxBr9NgtVppbG0BSUKvN2AqrSUW8lHrKXlshzXV303WXI6YiOHf
      WmVscpZoTsasK/wriAY2WVxZZ2lhnso6N7037zHtj1JuKFy2sOFdx11RjZAIUV7tore7j9lo
      irIiieNqqhz03eljIZHDXZSIUOWx0tfTz3JKxKXytXumCpTL5QquAkX9XjaiEp3tjd9axi1U
      DJdORIkm0mg0eioqywgH/BgsTkqctoJLx1/G1FJeUUkyGkBnduK0qdtf8DD5TIpQNIbNWYrD
      aiIaCqK3luCwqpMufxOKIhMJBjHaXdgtu1le+2rMcDCA2VGKzaxyj8FeSQBRFJHVblsqgH01
      6N5iz5RBCy1rquWL+4XaleB9vp/suTmAmE0w0HePe32DJLLfUg2RRVbWvE/kuCQhQ9+dG4zN
      r6EoaW5cuMjF63fJCYUv3imKgnd5nkRWQpElxvpvM7fmZzfP9Hw6SveNG2xFUiiyyEhfNwve
      4K5ixgNerl65zKI3SD4T5trFi1zu7i88ICCkY9y6fpXFjSDZZICrFy9y9e6Q6jhfqwX6IZPw
      rxMUbTx94jBGjczE6BBL60GqKyyMTywQz0nEfcvMLq5iLXGzMDWKb2sLxVqO0/rtk8dCtUCh
      bS+l9R2sDPbgKhEJmQ7x+ukO9LuYBEe2lrh99y6O2kPklvuJOA8SmO7H09SKqcC4t69f59iz
      Z7h99RomIUiurJP10V7q29tV2aI8TCqTpe3gIfpuXMNqEjDVnuTZoy0FxfqCjfU1WjuPMXLn
      FjptjtKWp3mqs1F1nD33BHBWt9Logu5b3QTiKSQJYuuLhLJZ4jkjbQ0ViKKClE2wtumnxFPL
      088eJroVfqzH5alpIr4+hVJej9lYTmJ1gF//5g9Es4VLl901rRxrbwBgOyjQ3uqh0e0mIha+
      DmAxahgfnyITibMakWhtKqepxEl4F48Ap9XI1c8+RHRU4bC7WZ24w69++zH5giNCQ/MBlkZ7
      KWlsx+VwMz98i9/87rzqmHsuATKJMNG0TKnDTDzsJyOZcNoMSBK43KVo5CyBaI5SlwNZktFo
      tGg0GjSPuRSwOT9CkDJePXMcWWvmpdfeoM1jI5YrPAEexl2iZW0rznYijlOn1h3nS44+/TwH
      W+qxV5RTa9ew4UuwmUpRsgtJeFqAN9/9Gbb0Fkl9Ca+8/gZVRolUwRFhavAOxprDPHu0DYOt
      lFdfP4tHL6BWXL5nJsFfYLG7qChXoLoal8OKxx1Bp2/BYrNQZtOATsuxI+0I6LCYzYAC6Ghr
      tz3W48rmBILeWa5tb3L6mYPcv30dU2k9dY7CRXUbi5PMeKNoQz28+MJzbA3cwVrbTomx8K81
      FQswPLnEyTPPUVNi4F5PD+6Ww1h3kQCJ0Ca999apOHCMEp1Az60blLQdobTgiCBIMpuTg/i9
      lRxuLefureuUHjyG2pWcPVMGfSCGe8zk83kEQcBme7wJs8+TYc88AZ6kHFoURXS7GGbs8/1h
      z80BELOE42olUY8f5YHqVHkgqS6mrHonbnFl2j+GmHvmCfCAXIyVbQm300ouFWVxdZO65jYQ
      UtgdLhLxGEa9llQ6jdHmIrq1gqm0hhKzlnAogKi301BdXvTDCq7Pc39mlVgsy0/f7uR//H6E
      5gN1vHjmaYxqXGe/gXRgkQt3Z9DoDLz37ptFMeCKb81xtX8eRWfmFz95vSh7o8PrU9waXkHR
      W/jFu68VZQehf3mcnol1NEY777/98u5dIfYK2UwGWcwzMjbF2soSkgxLy0v4V2bZiAlkNudZ
      DacZHOgnsLlGCiup7Q0ehz9eeX0brzz/FCUOG+lICrvbjlarK3if7Z+yNLvBq++9y5EqJ4F8
      cSpLK4vbvP7eu3S6TISKJIdeWw3yxk/P0W5X7+DwTXi9Ec7+5BzNFoipfO2eToD1jU0qq6tB
      FkFRkMQc2byI3mSlubEWIZ/HU13H6VPH0emNeMpcWMzGx7InIB3d5va9cZ575UVK67r4m/ff
      xKMk2CjAIv3r0GkVBAlESVJtEf6NMTUKggh5WS5aTK1GQZRAKGJMjUZBkndiqr2g914CGOzI
      8U3GJuepqChncztIXW01dTVVzMzM46mowuH2YNJqqG47hBj2EoqlcbjcmA06XOWexzIuXJgY
      IZHLMnBvCN/WEhcvXWEhkqeiSCrL1q52+i98ynJKoWyXznBf0NLZSu/F82yKBlxFkkO3tDdx
      5+J5/BorzqJEhJYDdXRfOE9Y58Dx7f/9K+yZMuhu5NBq2FeD7i32zCTYYDA8MUWoVqvFpNLa
      e5/vJ3smAbTaJzOa0+l0yLK8vw6wR9hzalCS23xyc5BYKITVZmF8dhm3WSGrtWL6mtJgeHGC
      qKUCx58Mm/PJIJsRkRJ7hsmJEBUVOyPWQtWg0e0Vbt7pZdEbprnWzAe/u8SaP0x9XW3BitDQ
      xiLdPX0sb0VprLRz5dIVvKE0DXXVu/bNBxDSYa5cvspGJEdjbWVRYuYSAa5cvc52XKSxpmL3
      AYFMdJur124QSCnUqyxh771JMGC1OXCVujAZdu7S0U0vSSHHyGA/H3x4nnDIR19fH71D44DI
      1OgQN+/cIxLcor+vj7v37rO8OMVA/wCBWJb1xWluXbtJIFl4gdRSUskbZ9/ElAwSWJsjafVw
      6GAHRkPhTxKbu5qzZ8+iiwUYvz9I+4tvY89HCBdJYDc/PEznS29jjG8TL9Juu9mRUY698g6a
      kLdorhAzYxOcevUdJP/qvisEgMPlpsJTjuHzYYoiSyhaEx63k9MvvoSUiiMB234foKPz2Clq
      y2ysLi+SyMkYdBoqahtpP3QUT4mZ+pZDHG1vRtiFzFiv19B/6yplh47jaTjJuTPtzA3cZmsX
      rhAGHfTcuEpV10nIayl1GCgxmcjswhXiYTKClhK7AZfRpFpl+U3kJB0Oqx6X0Vi0mHlJh82i
      x1lAzL2XAFodUd86c3MLJHMCZpMRvdGMJh/j/sQCm+srpHN5QIfVbEZrMjM/2k8wJdPc0rLT
      QMNoxmxzEFybIhjPYzTp0er1u2pFNDt4G8FZh8ukJeTbIBBJICmg28W4YqKvG21ZI04D1NaX
      MNA7xqw/Qpm+OGXQ2mo7Q/1jzEaTlBVpwa7KY+H+4DgL8UzRXCEq3EZG7k+wksz9eF0hnhSF
      muNGA5tsBqJotCYOtDewvriIuaSS6orSguUAYZ+X7VAcrd7MgbZmfGuLGJxVVJQWr/PKxuoS
      Jlc1Hldx1K+KLOFdXcZaVkOZszilZEUWWVtZxuGpw61SXv5YE0AQBOLx+OMK/50giiKSJO2X
      QfcI+08AleRyORKJxP5C2B7hicwBJCHL6NA9rly5xsTcylccBhLRGH+6fhvZ9BLJ7GbH6PeH
      rfVVMoKElM8wdn+QxXU/iphioLeX3v5hMqL61euN1RVykowsZhkfHmIrnEBRJOYm7rOyGVKt
      ZVIUhfXl5Z1m2IrI3MQIM0sbKLLIzNh91rYju9NHfR5nbmULRRKYGh3C64/uJiL5dIyh/j42
      AjGyyRB9vb3035/4s2vp23giCaAzmDl2/AQudwVd7U1src7R3zeALxii+8olBkamSMZDDAz0
      M7u8SToWK+jC+L7hnR/j//t//xl/Ksfm2hKu6ga6P/o9Pu8kU2EtRw53qHZvWJsZ5p/+6V+I
      5ET6r31Kxuji4gcfMHf/GvNxC70XPySi0hx3ZWqI//v/+VeSssxw90WCsoNSu4n5/iusZWzc
      /OQPpKTCU6Dv+qckDGWU2AxM9lzEJzq4+tEfyewiq5YXl6hraeWz3/8b86N9xE0eDne0/jDE
      cJvBKKdOHcG75qW5sYWjxzvRiAKKAvOzMzx+f7cnQ13bUTqbqnb+3HKQxPoU+qoWLJZy3IT5
      3b99QCKnLtEbDp6go35nsWfTH6K5qYUyfYbh6WVa2w/S4NKzGVOXAM2HT9FWs7NDd35hkdDG
      Aldv3GF+dY3Wtnbq7ApbycK/lfnFZQKrM1y72cuid5OW1jaqLQK+Xexbau/sYmmkB8+BI7gr
      68lvzfJvH1xAVJlU30kCKKLA9tYmGqMNrU4i4Auztr5BZV3dzmrtHpyVzA1cYyZm5e9+8RZG
      u4c333yTBqvIVrJwj2SHzUoimSAl6qmvchMJR4ikZUqthX+tpaVlHDrxLNZ8AK3ZRTQaJZLV
      4LIUXgYtdbnpevp5jBkfOrOTWCxGLKelpHALU+589jvyni7ee+MZXJWNvPnWW1jTPmIqBw5P
      bhKsyCTTWew2K7l0Al8oTk1NNYqQwRdMUOFxsu0L43SVYDHo0BjNGHdhGvW4UDMJXp4eZmBk
      GkdVI25dikBSwWqx0tXZwtjYFDqrmxfPnFSxvqCwOHmfwdEZXHWtnD5UT//gKO76Dk4c8HDz
      1h2MrlpeOH1Uxe4thbmxQYbGZilv6uBMVyO9ffexeRp56mAVt7p7sZQ38PypwwVv3snEtrnd
      O0xJVQvHWsu4fbcfW0Uzz508VFA8gO5LH5LV2DA73LTWOJmaW8ZWVs+Zk4cKa5L3pFwVfujk
      cjmSyeR+j7A9wgM1qCTttLPf599HEAQkSULYRTPqfb4/fOMQaGNtjaqGhqJtWxOzSRZXt2hq
      PYCpCJvAv/mNcszOL6K3ltDcUMs3jS6yqTiS3ortQWt7mVgsicmgAb0Vs/HrP/l+m9S9xTfu
      B7h24Tx/8b/9JyJLc4hmN43VZXiXF5DMpTTVeFS+jcz42AT1LU2Mjs/w9Al14zRVZCME8kba
      7BlGp5c53FyOdzNAZV0DOilLJBzG6CjDrlfQaDQkowHCaZn6ahfzc8vUlOmRXS2UaJJE0jL1
      tZVFOVbfyjRDU8vEkxI/efM45y8PoDdb+cm5N1U1DvevzfK7C3f5+7//X4mvj3N3bAWjw8Pr
      x6v59MYIWrON98+dLYorRGJ7gYt3xtGYnfzi3dcKdoWYHrrFtDdBRW0zh6t0XO2bQWdx8fNz
      rxR8bofvXmMzkkRf0sDJBiO3hubR28p4/60Xi+cKsT3RTe9inPHui/TcvcmFOyNc+O1/x6da
      xiegNbooL6vApClcUfmoGE1mKutbIRchlYiTSMa4PzLB2sIEKdnI4sI8Md8KvkiC+/fH2Zwd
      Zt7/pVOllEsyPDbJ5sII81vFEe1W1B+go7Ueu83Cwtg8L/385xytKcGXUncySyobOdJWh6Io
      rKwFeeu996jUZBieXOKVn/2MzjJL0VwhFmdXee1nP6PNptmVK0Q6lUav0+FwOlha2OCN99+n
      ySTtyhUimMjz5js/QQ6tMbO8zZvvv0+dPr97V4gd0yYRQdGQCvvx1DbhcRhZ93rR2ct4491z
      OFTvI9MjCilEMU++SPYa30Y+E0fSmPBubFBa6iaXy6A326iprsJi3lFLylIOQTFS19ZJpePL
      DS6SkEPCQF1rJ1XO4jXC0BtM6KQsWbXF6ocwmcxfuzFF8w1/3i3F+LZOvvg2Pz13lu2p4a/I
      lXdznEcPtXD92nUCiRwaCj/OP38CSAJ9t29y+MyrdD37DrJ3kKSjifd++j71phReX6iAt9HR
      2lDB/eFxGlsOPL7hD4DBSj60xsTsOgcPtlPudhEIRqmurqLEVYZeC2VuNxZnOaUlbhprHGz5
      Qp/37irHVuLG7S6nvsLBti8In2+13N7aIpuOEo4VpmJfm5tgcnaRZE6k/VgH3R98wNhmnEqb
      mmqSwvz4AGMT09zuHaC2zsPljz/Gj5XjXa3c/PBDpkNZyovkCtF6sIkbH37EQppdNcmbG73H
      hQsXyZpLOdRWx7WPPmI1r1ctXX6YTDqNlM/QdvQEB5urufrRR2xIph+vOe6TYn8SvLfYM5vi
      BUF4ok3ycrlidbnd57tkzySALMtPxBdIkqQHP/v88Pn+aQ12iSLlGR7oY3BwmPA3bGIPBYPf
      ieAutr3Arf4pFDHC+Q/Pc7W7l7yo7kjy6RhXr9968Lrwxix3hmYRs0E+++gzrnb3IUrqYuaS
      ES5f70aSFcRciru3bhBNi4jZOLeuXWFgfH5XTfK2V2e5evUKA2NzpGIbXPj0AtcKaGiXjgW4
      crMHgOnhXq5evcpnl7tJJUPcuHaF4ekV1TH3zBPgCxL+dey17bTVlCLmUwzc60WSNXQ+1clU
      7ySlDQ0ImRhmbYb7U1vIwPPH6rg56sWslTl2pIuVxTkyOZFDJ57CYSzOPUIW0gxPLJLROMhs
      pMi7Gjh9pBGDijUAgGgsjpBLIcoKunySseklMjo3yY0osruB40ea0KnUUEXjCXKZJIoCyXgc
      WcyQzMkE5odpOPkiW0N3SB1uxa4p7FyUVjXycnUD169049PaMFU0cfyg+oZ2sUSadHJnH8Gh
      E2doT4e4PbLG0vgYHadfYuHebTKHmlBTVthzT4CH62GZqA9Xw2GePlTBynYcs7OC9uZa8vk8
      MtDUdpiGMieiLFHb0klLQwXRwBa+cAKtFrIqdfX/HpODvTgqa0klosjudo7WW7l/+yaBlLq5
      REV1PU7bznbMsb4eSqvrSMVj6D0dHKqx0Hf9qur9AJU1DQ+6trs81ZSX7Oz/TWY1lLvMlJnN
      JHfxBNDJWW5dv4ZkKaGysYvGMj23L11W3SOsuq4Rq/nLCtf0xBQHuw6RE3S47CbcJuO+LYqj
      sp6Ed4bBwWEyOifhlQn6J7doqHRgtVnRsOPuptFo0WpBq9OBRotOq0Gr1WIrcWMz6dAaTFi+
      QQ5RCOW1TRjlDIl4glAggNFWgtmoRd2yiEI2kyKTzpBIpvHUN6MV0iQSCULBICa7C7NBi6Kq
      Kq6QTafIZDIkUmly2QypdJpUKomn3MTU9CpLsQTuXbhCBEIxTj7zPPqUn81gGIujFKPqlWqF
      TCr54DgVMYk/pafSYabUqWV+YY21ZPbHWwb9QZjjKhKhSAJ3iZWp8XEs5fU011WoWBdR8C7N
      shmMozc7ONp1CD0ioWiKUqeJqYlJ7BWNNNaUq4q5tjDNdjiJwVpClVPP+nYIrd7E4a4uNhYn
      sXqaqCkv3Ms5HtpmbmmdqsY2qkoMTE3N4K5tpa5CzUqAzNLMJMF4BqPdTVeTh6RixWUzoEgC
      c9NTlNYeoKJUnXvFnkmAJ10G3d8UvzfYM5Ngg6E4q5+Pgkaj2bdF2SPsuTkAuV/MlgEAACAA
      SURBVDh37vYwMHifWPrrnSVyyTjh+J9PwaRMlI2AWjnVoyHkEkyNjzM1v4KiKGyszLMVLN57
      KYqMd3kOX3h3ezqkfIbZ6SmCsRSKIrO2NIc/sjtBoCxkmZuZwhdOoMgSq4tzBGPq22Qrisy2
      z//g70G/D1FSUGSR5YVZQnH1MpW9lwBCGmNZA0fbalnxbhHaWmVgYIBgPEtwc4XB+2PEE3Fm
      p8YZHJ5ElEXmJ0cZn1lCyCYJFPDFPArbS1NERRMup53Y6ijjGxlG+24Tzxan0hRaHGbGl2fw
      7i3SQuFDwaG7N8nrTNy5foP12UEWQwK93bd2LFMKxLu6hMZopb/7FovT/axFBe7cvKXawmRh
      Yog/nL8KwObSJB9+8hmJnMTyeB9bCYk7t9TH3HsJAKzPT9A3tkCVpwxBEFAkgcmpSVa8QY4f
      7cSk0+Dy1FFrEdn0zjO5HmN9boZI5vHt8tLpzYQ2Fhi4P8HSSoTTzx3lYHUFoWxxWvKte+M8
      9UwX7R43IbHwz1HmLmF+ehLMDvzbKU4+dZh2l53QLqaKDa2HsMgJrOXVhP1Zjp88zAGnhbDK
      OG1Hnqa1ZsdRtKblMEfa6gEIhPMcO95Js92EWrehPZkA9a0HKbMZEcQ865th2g60oJFFUESS
      qTSiDFarBZ1ei1ZvpLK6njPPP4PT9PiaXpTVd3Du3Nu4xQSKRSEYzRPLpjFrizMNs5kUwvE8
      sWwGS4ELVgBrm2Fef+ttXHIMUSMTTQhEcjl2M+Vfmx1mPWnk1edPYjFIxFMCkXx+VzEfxqiT
      SKYFovm8qkUw2EOT4AeYS2lvUCix1hOKxGg/UI8/KXH0cAdmHaxuBmior8Gi1aF1NoHZjkFe
      IZTI0FTjocX8eMTa4a0lRmZWMJfXc/JkG1euXMLgqqXLsQtvkIdoPfkU165dxuSuw70LOXR7
      exM9N65hcddz4lgTN29ewlLeiGMXHXj8/gCRlJ/uZIKnjx3n9q1LOKpaUFewlBkf6CEYDHKz
      b5QGu8iy10dE6ufZo0e4d/MSJbVtqpNqz5RBnxT7cui9xZ55AjzJhTBJkp5YT7J9Hi9771uU
      BDa862z5Q/+uzEDIpskKDyeMTDqVJp/LfKtCc/+huXfYM03yJEnauTAzQUZXozi0WTbCWdx2
      A8FgBL3JjCLlScRiiIoOrSIga41I2RTRVBaLWcvU5BI6MU5KY8cgZ3d+bzF/RVbwRZM8tQtv
      Qe88t3sHmZhZoaXOwK9/cx1/LEpdbS26Arcb+ldnuNN3n6m5Neo8Ri5cusXiuo+W5gZVDg7B
      jUV+9eEVjnYdJhXZ4sMPP6S8oRNNcpk/fnKb7UiC5oYaVc5w/rU5fvXxdU4dO8za3Ch9Q6PM
      Lm3jsUtcvn6Xpc0wB5rrCt4euzw9zMDwGPOrAUpNOa7e7GHFF6O1sbZ4rhA/VGwOFw2t7Ujp
      MMlYBH/Ax9jULKvzE2xHkkzPzhL3rxGIpRkfn2B1eoTV8JflSCmfYXxyitXZUdYCu3BwfYjS
      6hbeeO0lHHqFqG8bwWzGVVqGbhf2JWV1bbz+6gvYdBJzk/M8+85PaHboCKlskmdxVdFaVwaA
      wVJC54F6RFkh7vchGU2Ul6vrvAhgK6ulqWpH61Pf2smRznb0yCzOr/LCO+9SSUa1g8PDNLYd
      puvgAbSKxNKil5ffeZcyKYnaZcA9mQAAkpBBUvRs+3yYTGaSqSR6k43Ghkbsli9cIdIkkgIl
      FTW4zF+WQMV8hmQ6T0l5DS5rcUqjUi7BrZt3OHT6DJ6mp/j7v3obTWCZjXjh6wBiJsqtWz10
      PXMGvaxBrwO9Rqt6Mchm+7IeY7baHniVVh16jr/72Zsk5scJq1wIs9lsD2wfZDGPPxBGo1UQ
      JA06Hei12l1tSlLEPP5gFK1GQZQ16LSFxdwzk+AH6M2kg9OMpYO0th8k7lsmEMtQ5nZjc1jQ
      acHpLMFklNGaS6mrchBPpPDU6CgtLcFs02KylFJTHiCeSOKp2blH+Hw+XA4z0TQ4rOrLjGM9
      1wlkrDA2geZAGaOTy8TjGQ7somR5/851oqKT6bFJjh2s4+pHn6I1mHjPqCbmjjnu+PgEmN20
      eIz0D49hD8CJVg9zy+tEs3BalRxaZmZkgMmJSczOCjymLL5gjFRaovNYI9c+/hSMdo6o/cAP
      MTc9jj+UIJVV6Ois4con59GYnBxTFUXaO2XQH4Qcep/vHXvmCaDX69HpHt9K7hcoyo6lotpO
      8ft8P9kzCfAkLn74stqk1++ZU/ejZu9NgtMBxpa2AYmJ8amv/FMyEiaVF5mYGHvih5WJBbl1
      /Qo996eQpRifffgJF6/fJScUPmyThBzD/T2EUyKykOHuzSsMTS7uysEhtLnE5UsXGZpYRMqn
      uHNjx22hWANlMZvg9vUrjM6tFScgIKRj3Lp2hYkFr+rX7r0EkCWi0SjRaJR4Mk0ytElfXx+j
      04vEo2Hyokw2myUZ2qS/v5/hyQXmpqcRZZnZmcfXn0yQFE6eeYncxhKhjTmo6uT5Z05hNBT+
      5EpE/IQCW4RTImtj/ZR0PEtmc55YvnCJtcXp4ZVXX8W/MMn0aD/lnc8SXZ4irRTnzMyPDFB9
      5AzB+QmKo4OFmeFBmk48x/bsuOqYey8BgEQsjM/nJ5sXyWSyoIHNNS/ZbPaBZ87S3DwCkEjG
      qbDrWF5bRdCXPLYT4nC5WRrtxVTfhrO0lUpDhCvnPyX4DZt2HgVXRT2NVTvy4HBcpr7KQZXD
      SXwXxQCTTuHm5fOkjC4ySaipcFBtsxEv0hMgkdFQVW6nymqhWC3U03ktnlIbFVYzarfu7MkE
      8FQ30NHRhtNqIhKJgEb3Zw7ClZUehLyEq8SFq76V5YkJGurU9j14dFYnB9BWHea54x0kEwma
      Oo5Q6TCSK1I72CqPkdlFP6uhEKW7mJ+EYyleefs9SoUAeruOhZUAy7E4pbtwhXgYt1PD8nqQ
      lXiS0qJEhBKrwtpmiPVE+sfrCvEAZccURKPhkcet8dAW894Yp44d+lrr8YcpVA3qXZhgYsGL
      Tu/gxVdOMXz3LvaaDroO1BbcfG5jcZLx+XW0BhNnXniZlbEezFUdHKjzfOvn+CaivjUGx2ao
      bz9Ge30ZY4O92Gs7aakpKzjmwyiSwPBAL+6mIzRVFScFFCnPUN89Kg4co6FCXQo81gQQRZFM
      pjA78SeJJAooGh36R3BU+0INut8kb2/wWGt5Wq32h+GeoOIYNRoNqVTqiViw7PP4eewJYDQa
      kYQsE+OjxFIC7so6Drc1PXic5rJZDGbzVyYjiYAfnKU4itTooZgoioJOp3tkNWgiFsVsd5JN
      hIkmMmi0eiqryvBv+pC1eqqqKzGo2Fsg5rP4A0EcpR6UXJxYMotWZ6CiohT/lh9Za6C6ulJV
      7+FUIkYklsLtqUAnZQmGYzhKy7GbYGsrgKw1UFNTiU7FGEjIpfEHwrjKK9FJGUKROE63B6tB
      Zns7iKIzUlNTqXISqhCPhMBox27W4vMFcZVXYNZrCPh9WJxlOKzqbrhPRA6t1empqvDgD6U4
      caSDWMDLxMwSdoeVm5+dJyJocDuNjI+OI2gtCGEfeVvJ9zIBJEkin88/UgJ458f4x3/8Z1pO
      PYM+lyASDvKr33zEiVYbv742R0NlKaXuUhVyaIXJ4QFSeYnLl2/R3FJLLOzjV//2GYdrDXzY
      u0Ktp2QnpopG2SsL82QyCS5c68fjMhFPJrlw8SY1thQX7m9R7XZQVlaqQmItMTY4QFYUuXyt
      h/ISE8lUiguXblGuj3JjJkyFy4G7zKUqAYR0hD/+yz8yk3YRn+shnFPo6RvDkF5jYj3OwL1+
      uo4d4dEFtuJ3UwWaW/Zy9HArs/NrNDe2cPR4J1pRQFIURodHitKX6vtAXdtROpuqAHBX1lGi
      TdF++mVQTFQ4YGR8CkmVylJD16lnMeVCWEorqaiqxyrG6XruVbRaM26zyMj4FLKqaZ2Wuupy
      ZqamqKxvpKa6mo2lWezl1aCzUaLPMjIxq/I70XH89BmUxDYOTw21NdWszs/grKhFa3RgU5KM
      Ts6pa+ylKPTfusGxM88DsLQd5ZnTz2JIbTEyu8KpZ16kUpvAp2ohQP/dJIAiyyiyiKLRoCAh
      CjJLC8u0dR3BbtIWbdXxe4UicePOGK++cBJn3SH+9i/eo4YoS1E1RQKF+9c+ZD5Xxt/+7DW0
      ikh3/wwvP9OFu+kIf/2L9yjL+llLqdsPYHVXc+7cO3hnR9FYXLz25jtkt+axNh3nr37+Hvbo
      Gps5dYa7dz/7N/zGZn75zvOY7G7eePsdkt5ZXG2n+MufvYcpsIhfxXqdLKTwRjKsL8yysLi4
      I31WZCRFi91iIi8I5CQNFlWDeuUJaoG0elqad3xcug4dYHJug6NHOiETZW56jgMdB5iZmae9
      8zAuiwGt+YcvNlueHiYmyIwN3cd1vJWytpN4rDrC3lnujS8jWKp5tlSFqlRRWPXHsHt89PTL
      HG8rp/LQM5RadARWpxmcXiNf2kSzXcW5kwTudl8nlZNoP/oUE/038MdyVLYdJeWdomfWi1Rz
      kDqTihqonMcbylBmWqdnSMSY2SKUEqjpOEZsZZw7C5vomo5QpWKEqzXa+eu/+4/kfHOYN3R0
      OuNc+ORjGk++xLEaA1dvfoq19QRuNaNmKb0H1wEeM7lcjkQisS+H3iPsSxoLwGQyYTYXx89n
      n++Wr50DZBMhbly5RM/Q5OcTKpGh+yO7eqNkeJvBwftEko+5u2I+yb179xgemyKT/2aZQSYR
      JvEVK0SRrU0fiUiA+LdYJGo0O8001PzIYp7trU1iySwajYZYOEA8lVMdR6vVkkwmQKNBg0LQ
      7yOTl9BoNERDfhLpfEExv+5Ho4FI0E8ys7uYUj7D5sYG/lAMjQbCQT+prLCrmIoksL29TV5S
      0KAQCvhI50T1sf7865X55A9/pOP0S+j9I/TNhwCJ/oH7hV2QAEjMLqxz5EgH87Nzj7fKk0+i
      ddVxsMnDxNQcqYifgYFBArE00dA2U+OjLG8EUGQJRaPBt77I8MQsoiyxsbFNIuInnhbYXl9k
      eHwWsUid7WPBLXzBENcuXCS4OUX3/QW6b1wjmVOnBVqfH+O//foPZPIyy+N9TC6uceVaN5G1
      cXrGlrhx7SpZlY33vong0ih9k8tcuXIdcRcj5enRfta3QyTSGbbm7jM0vczlKzd2pbztuXmN
      7e0NLl67w9r0IKNzq1y5elN1zK9JAIFwRkd1iYX2A02srm3t4jC/QERvdGAyWjA/mX0rWJzl
      6JUMgpBHkUXuj4wR2PLiaTxILLhJMrRJMBplYGiC2PoU0xtfahOFTIyh0Wlim9NMrxfHwry0
      vJK4fx2Dy4N33s8LbzzPkboKAiqlIvVtRznaXgeAP5zj2eeeodGqZWw5xPOvPcfhylKCQnFM
      ftfWozz/yhkOldoI7uJGYNAbCPk3WNvws7GV4LmXztDuNBHaxbFlBIkDHYfQxAMsB9KceeFZ
      WuwGIirjfE0CGKl2Kiz6E9wfm+NgWx35dAytfjdWgAbEXJR0JkFGejzem39KIrSJYnCysOLl
      6NEu9FoFndGEzWJC95Ba0l3VyAuvv0WL5+FJrYK7qoEXXnuLlgp1DpbfhNZo5cVX38SW8ZFR
      JOIZmbSQw6gp/I6gQSQvKqQEAYdeIpmRSQl5jAW77XwVk04ilZVJigK7mfF0nHiOn7z7Lrqw
      l7xWIpOTSQq7i/niC88yen+EDDrMiGTzMilBQK3w5msmwRre/eXfMdDbi+foGxz0wJ2+Kf7y
      r9/bxeFqOXLkEFNzqxw92lWkr+cbMJVgSE2ypi3n2OFW0mEb0wteDh9qx2bUYtRBXW0tZp2M
      1ViCU04yOrVEV9dBmpsbsJg0KEY7Dm2esclFDncdBmB7awtXiYVIEhxW9bWD1elhJle2kc3l
      vPjcSa5c+AhDSRUdqsxxFebHB1le3SCjHeDUwTZuXfiY0po2jh2u4sKljzGVVnPUXJwV9Pbj
      x7h0+WPM7jpKCjTvAlgY72fBG8RS3sDJgx6uXvoEq6eR3dxSfRteErEwR55+niZnnusXPynA
      cHcvyqEfM/vmuHuLPVMGzeVyT7RJ3pPahL/P42XPJAB8blorS+Rl0GsURAmMxp2PmMtmMZrM
      f7apQ5F2ltDNxkc7FYqiPPjZ54fP3jPHTQeYC+RJbS0hmpyYDVoEQSSbTWM0mchm0iho2F6e
      JKHYsellUgIYtArZbA6NVoci7+wl1ukNf6aALNQcN7Q5w+VrfWxHU9SXmfjswlWWN4I0Ntar
      khk/TDYR4vwnH+Go6cAihrlw6QbLW2GaG2pVmeM+TDK8yc3uu/jieTxWkYtXbrHii9Gi0hz3
      YVamhugZGmPdF8djl7hyrZs1f5LmhuqC54PJ8CZ/+PgiTQcOkg+vc/XGHTZCGZrqq/bNcZen
      honrSvBYFe7evoXXH2FtZYWYb53R6Xm2fEEC25t4NzbJx32sBDNMDPazsrrI5OwqkcAWS4vz
      TC0Wz7oj5F0npzFQV1fH0sgox86+S5NTiz9ZuDeCjJ62phpyosLi2AQnz56j1igQyhdeBp0Y
      HkFnMlNa6mJxYoan3zxHuZwiuosy6LYvxKlnn0OMB5mdmueZN9/FlY+qNrJ9GFlnpbm2DElW
      WJhd4rm33sWWCaG2xeGeTICGAx0I8TCiDJUNB2itrwTAVlaBy2IgEktSUVlBU2sbps9HPpaS
      Mg4eOohJIxEI+JEliXCkeG1M20+f5Zc/fY2l/rsERR1WkxaTwYC4C7sRq6MEk37nfpeXdFiM
      Wsx6A8IuhmfpTI7jp58jsjBKIKfDbNRi1evYzcqCw2FjcngIrdmGKOkwGTRY9PpdxXSWuB48
      OSV0GPWFxdxTcwAAdCacTgvNbiMbgRh2287eXYfDQT6TIpPJYrDbcLormZi6j/1ADQ6LHrPW
      Bmiw2azkUymyooTTUZw1ANjpXLkWiJPAwDMd1Vy/cA2tkuds58mCYwY3l5mYXkAXMfN0awXd
      l26giDnOnSq8DNrSUsdATy+yoOdEexndl28gCALv76IMGo/HMVlLCfmjdByuofvKTfKCRGfB
      EWFzZY7Z+QUyhnIaPQ66r90kLyh0qYoi750y6PfdHFeWRVLJNEazFaNBRzadQqM3Yd7Frrd8
      LkMmm0ej0WKz28lnUmgM5kee0H8diiKTTqXQGc2YDHoy6SQ6gwXTLmLKkkgqlcZosWLU68ik
      kuhMFkyGwmPmMimyeRGNVofdZiWTTmEwWVUajSl7JwFEUXwilZl8Po8gCF/x1N/nh8ueGQI9
      KbNaWZZRFEV1FWif7yd7bhKsKBKTw/309Q3iC4ZZ2/xzMV/IH+Dh3XiJQICM9HgX0ZLhba5f
      uczw9DKKLDHce4uxubVdbf+UZZH5qTFiGQlFEhjqucnEwsbuYoo5hnpuMTS5hCzmGLh7g+nl
      raJtU5WEDH23bzC76itOQEDKp+ntvs68N6D6tXsuAVL+VRRXE8888xRuq4H5yVHudHcTz+eZ
      GBxkfHaFaDRKLu7nbk8PcytbjPXdpqdvmEgsxP3BfobGZolvL9DdO0jPwKjKTeZfj0Zn4szL
      r+KfGWVp6h5CZReJtSlCu/AGjfm8zExPEEgIeCfuoak9SnBhlIRQuDnu5FAPjoYu2hsqWB27
      h7nhON7JIbJFyoDFkXs4W0+wMjZIsXaGzA714uk4xeLwAGrP5p5LgHxWwGL5QhOoob71IKcO
      uAmkZBI5DV3tTSRiMSRZQqszYjToqatr4ehTx4huLBHPyKTCAZLZDC2Hn6LUrv93260+KhaL
      iXvXPyWg2IgH8rS1lFFXVkZcKDwBSqubONhUDUAgLNLa6Kbe5SK6C7/RjbUNlueG+eziNbwR
      mab6UuodDiJFSoBoEuprXNTZrUSLEhHiWS01lSXU2tUb7u65BHDV1LG9MM7ExBTR1FcXmZzO
      ki+lEBo9dpuZzc1NLHY9C5PzGO0lGI0GKqqrMRZZ6pNIZnjujfdoMibQOA3ML4XYCIdwGoqz
      +d9TqmdpNYI3GqVkFzql8ooy2jqfpqHUhM2mZcUbZT2RLJo5rssG3q0o3mQaV1EigsMss+mL
      sZHK4FT52j1TBXoYUciTzQlYLBYUFHQoyBodiiyj1+sQBQGtTksmncFgsmDQa0inMpitFvLZ
      DGj1mAw6FI0eRd4Rvn0hAyhUDRrZXmVwbAZ3TSsnOpsY6buDzt3M0fbGgk1nNxYnGZleQmuy
      8cILLzB7/y6myja6WusKjinlU/T39uGobaezycPgvR7sNR0caq4pijmuJGQYuNeLq76Tg597
      Ju06Zi5FX18fnuYu2uorVL12zyTAk/LqzOVyiKK4XwbdI+yZMqggCE90IWxfDr032HNzAIQ0
      gahaSdTjZ2eFNUk2J6AoMslEgkQyVZQK0058hWw6RW4X7ZG+LmYmnSK3i6rSN8XM76I32tfF
      TKdS5AuY/O+ZJ8AD8gnW/RIel41MIszs4hqNbYfQ5JM4XWVEI2HMeh2JVBKTw03Iu4i5rB63
      RUvAv4VgcNKiUlL7KATWF5hZDRD0hXn77EH+eGGR9rYaTh3rQqvf/bslt+e4NuxFkUTePXcW
      4yP0Ovg2ot4pbk9sI4oS7//kbMGy7YcJrozTNxdEEBV+9u7rRTnP2wsjDC9HECQt773zyr4c
      +guEfA6tRmZkdBLv+iqSDKtrqwTW5wlkdWS35liPZhnsv0dw24tk8SCF/UWrTz9MRUM7p4+1
      Y7HbySVyWGxa4vEkSpGqK8sLPl5++3WOVJYQ2IUc+mFWV0K8/PbrHCq1ECqSPcy6N8rLb75G
      u8NAuCgRYWMrwctnX6PZplVdWt3TCbCytkFTczN6zc4OLknIks4J6E1WGuoqkUWZ+pY2Xnnx
      DDq9idISG0aj4bH4FiWDXm4PzvLK6y9RUtPJX/30LPUmgY1EuijxjTqJTF4mK4kYipRUBq1E
      Ni+TlSSKJfzQayRygkJGFIsWU6eRyIsKWVFUPaTZewlgdEByi7HJeWprq1lZ26apqZ6m+lpm
      55eoq6unpLwKs05DVVsngn8FXyiB012GxaDDXVlZtC/mYZZnp0jn0vTeHcC/vczFS1eYj4lU
      24rTaqnlyGHuX/mMjayOMmNxPkHr4YMMXP6MAFZcu5BDfyXmoQPcu3yeiLEER1EiQmtHM3f/
      //bO9Lmt88rTz8W+bwS47xRJiZJIbZYd2+217cSRkzjL9HyYmn9ppmampufD9HQ6NdVJpWPF
      tizbsiWTkiiRFPd9B0ECIEBiB7Gvdz7QizSxKgEIyTKaTxVL+gAcXuDew/c95z3ndz7/hLjK
      UrLSRNWkQZ/1cuhjnk2qJgiWy+VPpUJTEASkUumxOG6VUDUOIPlmzpZIIV9EKjvM0xcKhb/I
      2YvFIrlCAYVcjlgskCuIKL6jOUMUixSKPDI98lA0Vnjo9x3zQ6YK72KCmemNb6RLVlaX/0LK
      JBHy8snndyiI4F1f4LP7k4+85pufQoaDeLriUihi9oDrH37A50OjFRPfzafCXP/oQ764O16x
      s4Vs3M/HH33IrXtTFfvs6egeH3/0EYOjlRuFlQi5+fijj7gzvlCyzSp0gEP2t9cYGRtn1xcl
      Fw8xMTHByINZCiKAlLZaDd5wikBGQoNewUHAw8TEOBPzq+yuTHF7dIJgwMP27gH2lTkmxkdZ
      2aqEUDBsToxz+q1f0KzOsx8rXxXiYTampuh/6+fYhATBdGUOrtZn5rj49s8xpMNEK+Soq3OL
      XP7xz1DHfMQrYhFWF1Z48Sc/QxbxHqtCfI0/luWFF56nudZIOBSiIEIk6ONr5XBTbSMB1xpy
      9WH9YCQUpCgK+P0+BKmcsxcuYdEdllVvObZAkCGXVebrSuakGNQSNAolWbEygXs6L0WvlqCT
      K8gcSXj8WzIFKVqVBJ1cTmXcFHLFQ0WMStrMizJUikObpZ7hVKEDSNBqVdRbNIw9eEA4kTv8
      kIKATqdDEEAik6PWmZCkDrA2NaPVaA4HTkgk6HRaFGrt4UmqVIFGLaero4OiCIoKpRc7u2u5
      /+UIi24ftgpNnG/vqGFkaIyl/TDWCiUDWlpMjNwZYzWcwFqhs4WmBh2jww/YOMhQUxGL0GBT
      M3Z/nK14DnOJ762aNOjTohLiuKIoEvbvIaiNmPWVSaeKokjI50WqNWPSVcapRLFI0LeHXGfB
      qK1M1ksUiwT291AaajCUONT6sTaLBfz7+6iNpQ/KfqIOkMvlODgotUfn2Safz5PP51EqK3Pz
      jvl+OV4BSuR4SmR18VRigEIuzdzUKDdu3GRxffsRhYFoMMT/n7MIupyEjtAs/izhtG+QyOaJ
      BT3cHhpk3bmPmItx+9Ytbg3dJ1lGWfD2xjqpfIFcOsbY8B1Wt/cQiwXmJ+6xtrNfcipQFEXs
      a2tkiyK5VJSRu7fZcPkQizlmH9xj0+0vw2aRzdU18kDQu83Q4CA7+2GKhSzTY8NseUofkCSK
      RTZW18kDhfQB9+7cwRdNUcynmRwdZnuv1AFJT8kBpHIVA+cuUGOr50xPO+6tZcbGxvD4Atwb
      vMXk7DKxqJ/x8QcsbzpJx2Okn0JZw5PGvTHP7373rwSSWXIFKS+89BJ3rn1AyLWEV6jjzdde
      RF1iZsm5OsNv/+X3RLMFPC4n3QOXGL1+lbmJG+xJWpgbvFZyGnR7eYr/89s/kCgWcTldnLpw
      meGP3mdq5DMiqlbGPvuAWImyMfbFCf7pn/9AGihKVLz88gvcuHqVqbvXSes7GL7+ZxIlJqvW
      58b47e/+SBa4/uf3aT91mo/fv8ro4Mdg6eTOtT+TLNFTv5cs0H44weXLF/G63HS0ddJ/rg/y
      OUDAsWmviArDs0Bzdz99X/W9Ggw67n3+AQVTE0p9I6ach3/63/9CuMSHtfXkeXpbrIf/7+rB
      PnUbXedZwi43rW2tNBkVeA9KK4fuOH2R7sbD/EnHiV5Wxm5h6jlH2OOlpmrYzgAAFWJJREFU
      paWFRp3AXry0m3Li7HN01B+2vRu0Cj778N/QNnfj3/fT3NREvaaIr8RC2N5zl2m1HaatQ8kc
      NksNGiGBwxOisbERmzpPsESb34sDCIUMDvsmUrUBqayA27nH7u4eJpuNkqQdf0AkMzle/cmv
      0MedBAUdr77xJu0GgcARtnqzdz4hpOrg1+/8HbU2G36/n0CigFVbfoXL+K0PSZlO8t5bP8Ja
      YyEQCBBMQo2m/DRoOi/hnff+IznPCkqDiWAoRDgtwXKEZJVOKSOWiJMRlTRYDYTDYSIZKcYS
      k1VPLwgWi6QyOdQqJblMkvBBkpqaGsR8hvBBErNRSyh8gEanQymVIMjkj9TgPCuUEgQ7VmaY
      XdpEY22is07HjnsfnbWZs50WxicXUBjreOHCGaR/c6mxiH1pmrmVLfS1LZilSfyxPCq1jsuX
      B5gavY/C0srlgd4SBmSIrM8fCoYZG9oxiBFCSRGVxsClC31MjY2htnXw3NkTJQzIKLI6O8Hi
      +g7m5i5a9CLOvTA1TV2cbrcwMjKOrqGLS6e7/kZ7hzaXph6wYndhaenmcreVkcll2vou0G6R
      MDI6ham5h/On2kuwWfjWAURRJJ+vXO9ntZLJZEgkEqgrdIB1zPfLN2tlsVgkVeLQ5n+P5HK5
      skcFHfPs8Z1bIMfqDBvOAD39l2iv//ZwObLvIq+xYS1ptu0hudQBy+tOek/3oapQTc13kk8x
      t7CMXFtDb3c70sc8q6lYmLxMj1799d+AAqFQDLVCQJTr0Ci/Oxg5HpNaXXznkLybf7rGj37z
      Hh/9398xcOECm4uzhNMCgfVRphwRpFI5VpOGpdlJ4kUlJq2c5fkZUqgfcwxfZHZ6lu7eDhaW
      HDQ11j65YdnJIDtJNR1mWHYEqNFKWFu3o9abKWTieFwuMihQKwSQKUmGvTj3o1hMapaX7MjF
      OEmpgWLcj9MXxWI2PHKtXw/JUyhKkzTc317h7sgE4xOLtDWq+PO1IZbX7Zw4cQLZ47z0O/A6
      lvnn33/A2YFz+O0zfHF3nLUdHy36LFc/vcvyuoPenhMlxBWPJ7q7yoefD7O44aSvt6vslW/x
      wZcMTy4TiufQ5nx8fGuE5U03fb2dZT8HE3duMLO4xPruAcZigM+GxlhxeDnV03F0VYhiIcXS
      3BwyjRnnzBBD89vcuPp7fPE8OksdU19cY2ToOqMbfj76t39l8PNrRCRm9KrHpXByyJQmdFoj
      aumTV3ATBAFTXSvS/AGpZIJ8IcvkzBzurVUEnRXXtp3onoO9cJTJ6UUCW3Oser8tzi2kY0zN
      rxDcnmfVXZlSDltzJ60NNRhMJhyLDv7+N7/kUpuV/URp205by7eBnssT5Z33fkGLIs/Miou3
      fv0eA/UGfNnKHCJubXh4+1fvcdqkIHCE3HQ+X0Ahk6BUqXA4fPzkl7+gRyc5kipEOFnk7Xeu
      IAl7WHMG+ckvf0GnWqyMKoQgkVM42EVmbCQVj2Kua+WX//APGJVSDAYDGoWMcDSCramD3/yH
      X0M2jclsQadR4t3bJ5+KEYg8XO0tI5+Nk82myTyl8610PExRombb5aahvoFiIYdMpcFqMaP8
      aiyRWMwhUxro7b9Es/nbbV2hkEWu0tNz9hLNlsoUgQkSGXUNzchzB6QKIrmCSL5YLHmcqUwm
      +0ajU6BIsQj5YhG55HAucr5YRFqh9VUiPGyzfPp/9Pe8e+XHROxLpBHJF49u89LASW4P3iaY
      zCEVRApf2Sx1c/3dc4JFgf6X3kAe3aG27wWSu2tEM9Da0ojHuYWl4zSvvvgcu6tzJApynnvu
      Amtzk+TlWrbsdhoMAuv7GZpqv9b/laBTCSytOejqPYlG+SQ7MUWcDjvRRJ5TJ7tRCnncvgi1
      dbXUGA2oNTokAmg1WlQ6C2ri7Pqj2OrqkEul6A061HoLqmKCXX8EW109CpmEPa8XmbRAOJZH
      KZeUvAVyrs4xu2onlRV4/qUB7nx2i3BOyrm+npLSoBsLk4xPLxBNi/S0WRkeHqWgtfFCfztf
      fj5ItKjkXG9X2XOCH0avkzJ48zYxqY6BE21lb4HW58YYn56noLFyqa+J21/eJakw0t/VWrar
      7ru32fcHaTt1nt4mHUND98iqLZzpaC7J5nExXIkcB8HVRdU0xWez2aeiEP21LEo6Xal+pmO+
      T6rGAURRfCoOUCwWv/k55ofPd8cAP0AKhcKhckHCx+f3Z4j4donkZNjMh/pjyUiInESBx+3C
      ZDIRcO8gakwoSoyavk6DlqpBFPW5uD86zrY3QluDko8//BJXIERzU1PZKctsMsL94XvshtM0
      WpQMDQ7hCaVobqw70jCLva05pu1RGk0ybg/eZi+apbnBVrZNv2uD0fFpvOEUFnWGL27exxU4
      oLO1sfyLfIh01MfQnWGCSZGmutIaLatmBfgWEY3OgE4DUpmUhekxMuioU0sRbDmmp6dI5Yr4
      N+cR9mIMdDewtulAlKhpqpHj9ETJiRI6bGqUDT0EdtboOdl35Ly6Ul/DK6+9wditW/jdeZLa
      Wi70dh+p0X51dgq50UZTYx2OuRk6X3iD8NwI4UyOGlV5fcH5VJgVh5eszMbWvJeeF9/EM3GX
      WPEkhjJrs3Q1jbz+Rgd3bg7iVQQRjHWcOdVdlq3vYm1xiYG/e5ONkbsk6aaUVqVnr9qsAqh1
      emosRjLJNIJMzYXzZxCKBZQ6C+0dHZw80UFLcyun+8+QjR8gigLhgI8cMk6e7qfRpKWmuRmf
      y4EoyJFU4FBJIZcyM3Ibc/dZrE39vH6+jbWJ++zHy9eiDoUimK01bE6P4YkLmPUKjCoVKbH8
      7dnY3bvoTGYCvn3CCRGjTo5JoeQoRTJyqcjI7UFaz16krecSF3sbmRgcrJgsSq4gRaeWY1SU
      rjRRfQ4gSDnwe9lxeVGolKi1WiQCSOUKpIKAvJhh1eFGZ9SyOj9PPJ1DlEhQKZVIpTIkEgGZ
      XI5MqacQdmFqaK9IVn1jZoS8sZkarZxQYI9oMosowFF8q7mlnnAohkQqo6VZz+zkMhv+CDWy
      8lUhevsvYNUrEQQJDfVa5mZW2IzGsRxhTzUzOoyhuRu9QiCw7yGRziIKQsUePqtZzuLCGjvx
      LMYS31s1adBKi+Nm4kFm1r08f+HMIw5Qrjhu2LeLxx9BkCjp7m3DtWlHaaqjsdZctoOJYgG3
      w4HcWEudRYdnZwu5sZ5a8xFTtMU8kXgao17D7rYdpbkRm6n8mWg+zw7+cBy5Ukd7Wy07W9sY
      bM3UWSqjDy0W8zgdDvS1zVj0pVXpVo0D5HK5p5oGPW6Krw6qJgh+GsrQXyMIwrEsSpVQfTEA
      Io61BcbHpwiEo+z5/X/xiqDP/4gSRerggOwTbkTOJCJMTTzAsRtAFEW2VufY8R59SFBgz00y
      WzxUYViexbV/xPnrYoHN5TnWt72IxQIbS7Ps+qNHvs5vzBfzrC3O4g3GKmezkGNlfob9cOlh
      ddU5QCroIoKJS5fOo1cIbKwsMDY2QSqfw7G2ysqmk1QqRT4ZYWL8AVtuH9N3bzE8Ns1B/ICF
      2SmWNnZIBN1MzcwzvbBWEWXkVDJFU3sXS6N32bVPsZ3QsjE7SiRVfhdeaNfOrZuf44lk8a1P
      4MkZWJq4R+IIExjX58aIS00YNQo8K+P4i0ZmRoYr9gdiZ2GMqMTI5L27fyGHUy6bs6OklGbG
      h4dLtll1DpCMJTGajUgkEiSCgKm2iTNNCryxAm5PiBMdzQR8PtLJKBmUaFUKmps76b80QMS9
      gS+aZndznchBCHPLSZSS7FeK0kfDYDSyOn2fpNKM3x3j3IUTnKi3Ec6UX1JhaeriYl8nAB5P
      kv7+Tk5YLYSO0Nq6tbHF7vYK9x9M4dxPc+ZMB10mPcEKhYr+UI6+Ux10GDQVG5IXOihwsqed
      Nr2KUteqqnMAU109Hvs6+3v7xNM5lAolUqkUEbBYa5F/dZgjUxloa7CwsWlHrhQI7AeRKFTY
      6pvoHziLUiagUCgqNggjVxR4+c2fUieGyMsF9vxJQvE4amllwjCDFnyhFIFkAq1Q/jUbLTVc
      eOE1WnUiRZmIP5wikE6hq1AHk0ZZJBhNE0hnSp7n9ThU8gLhWJpgOlPSIRhUURD8NVK1iYtn
      utgLxjCaLbRoNCglRZokCoqdTQB0nzqJUiVHLEQ4c+Y0RrWEvGsPW2svsn0PolyBqaaTghQs
      bR2PbasshZB3m7n1HVQ17Zx/vo97g7eRmZup1ZXfb7BrX2Jp24fEf59XX36e6ZHbKK1tmJTl
      JwTOX36OeyO30dW1c/lkI8N3b6Op60R3BKd6mO6BCwzfG0LffKLkh/VxnBw4x/DIEObWXkqV
      KqiaNOjT+hiZTIZ8Po9WW35e/Jhnh6pZAbLZ7FOdEnk8I6w6qL67WMhykMwAIrGDR1Nt6XiM
      dL5ALFZdku3HlE/VrADfkA6zuVvgQk8tdruDs2d68Hj3MdkakHHo8Xb7JgP9/ex799CabUjE
      PBqNllQyiVqreSKKFQHXBlPLW8RTIu++dYo/vD9Fc0cDr7z4PIoyK0JjwV0+/fRzXvjpf6JW
      2OfG3TkkSh1XfvwasjKLjHY3F1na2iWVk/Pqc+0MjS4hURn42duvVKTNMuLZ4PbEGlKNiXff
      erki33XQtcq9mU1kuhp++saPjq4K8UPH7VhjamqGwEGKTCJG9CDG7OwCPo+b2FditB77Ki5/
      kPGpWTwOO4lcms2tnSd2TZamLt549SUMKhkxfxCpToNWqz9SmbVKZ+X86S4KImwtb/HylXfp
      NSsJZEoTx32YhvZuTnS0oFbKcaw7eeXKu3SqIVShc4Bt+y6vXrlCizxfsoLDY21u7/H6lSs0
      SDKUurZXpQM0d/Ry8eJ5rAY1Ho8XncFAIZN5ROP+IBrDYLLQ09VOR2cjy1PzmBpanpheUTYR
      4u69cc69+BI1bef5z7/+Meq4F3es/EJjuVL5kAMJIBz+c6RHVQRRlEAhQ7YgfPV9VPZbEYRK
      W/zKbhnvqb4tkEyD1VQAJFitNWhkBbb3w1jratGbdCjlUmpqrNhMOpbXHWCpQ6auRRTXqDc/
      uczO8uR9wikVC9NznOq2Mre4RTyR5ceq0tQlHsbrWGF8ZhmpO8/rF7sY/vg6EqWGK0dIgzrW
      FrB7Q6QyRc71d3Dn+nUEpZ7TFeiJAGjvamTo+idI1Eb6K2IR2trqGPzkE2QaC+dKfG/VpEGP
      Ug4d8bkJZuR0tdT91dceV4NWF1XjAN/0BD9hjh2guqiaLZBU+nQma3zdFC+TVc1X9++a6guC
      Ez5mNj3f91X8BfGQly9vfsGdsTmK+TDXrl7jxuB9Mkeo3HyYYjbB7Zs3GJtZrdiIqXz6gKGb
      N3gwv06lFtdcMsLgFzeYXLRXxiCH3XtffnGD6ZXtkt9bfQ4gFsnlDzvDQt4dHoyNsbjhZHV5
      jlwB5hfn8WwsMDIxhdfj5sH4OGNTC+xtr3F/9AHD9ycrVqb7MIJMxYuvvE4x4CbgXidv6eDS
      +X4UFZoJ5Zgdp/7cKxByETlCGvRh7LOTtFx4lYxni8QRGu0fZn12is7nXiXuWqfEcV6PZXV2
      ht7nXyO6vVpy8371OcBDxBNxEGB310smc6i+kEkfSht29w2Q9DpJFiGby5LLS+jrP0eTQU1l
      Hp9HUWt1LE/cRddxCnPtKfoa5IwOfoEvUb4qxMNEE1Bv1WDVaklUqDU0nhKotaixqdXEKrQC
      JDMSrCY1VpWqYqoQ6ZwUi0FFjUpJosT3Vp8DCAIexyoz86tE4nEkEikyqQS1DKYmJwgncsgU
      KpQKGXUtjYiZHFqtDolUgoCA5AnNJduaG0O0dnOqvZ5oOIjOUoteJaNQof1KY4OaxcUd7IEQ
      Znll4pM6m5LlFSdbkYMjqUI8jNUsY3XdieMggfmvv/xvwqyXsL7pYieWwvTXX/4IVZMFelqU
      K46779xgw7mPRKrh4uXTrEzPoKltp7utviKHQqJYZGNpBqW1k7b6yjxaYrHA2uIs2vouWmpL
      fbQeZzPP6sIchqZumqyGytgs5FhemMPSepIGS2n35Yk6QD6fJx6v1EL3bJDL5SgUCqhUlZkb
      cMz3yxN1gKclWPs0yWazxOPx4ymRVcITTWYLgoBUKqWQS7M4P0solsHW2Mbp7vZvhFZTiQRK
      rfaRYCS6v4dgrMFQpr7lk0QikSAIwt/cDxDy+9CarYiZGK7dPYzWBmxGBZsb2xQkcjq7OlCU
      GHcEffsYamxIxRw72070tkZqDGo8TgcyvY1ai6GkbZUoigR9Pky1tWRjYdxePzX1zVj0Knad
      2yiNdVjNurK3ar7dbUKxNFKFmpbGGpzbbkSpihPd7WVPicmlE2y7vDS2tqORiTh3dtBZG6kx
      lHZA+VSCYKlcxcC58+j0Fs70tBP0bjMxOU04EmHw008Yn10mmYgwNTnB1q6feChIPPfDn1ns
      3pjnf/6Pf2QvniYSDCKVy/ngj38i6lni1qwLrab00mvn6gz//b/9L4KZPKO3ruE5yPLJn66y
      uXSPsTU/X3x4lVi2tLOF7eUp/st//UdihSLhUBC5QsrVP77PxtwdpuxBrl99n/QRlAEUSjUq
      SZoPrt3Cu/SAGWcEjUZ1pNjn04+uks3E+NPVT1kYu8maJ8K19/9MtsTL/F6yQA73Huf7e7Fv
      Oelo66T/XB/ksxSLIsvzC0erZnyGaO7up6+9HgBrbR3by9PITHUg0WFTZbgzPEKmxAer9eR5
      elushzYtZrbWl8krdTjXVzl9/nk6TRKc0dISuR2nL9LdaAHAZrOxNjeJxtbMzuYmZ84/R6s2
      jztR/lbWZK0juuvg0mtvotRbUKT93L0/eaQDu1QqjdZcTzbkYmnLzZn+i9TKEvhKPAj4Xhyg
      WCyQTMRBogChQDKRZnvLSXtP7+Gc3mrxgIeRKXnl7SsoIjukTR388udXaJYlcEbLL4fesG/z
      8pvvoEnvU1ToiCfixDOgV5V/WyVKLW++8zNyexuIKi2JRIJEFvTK8v9ei8U04yv7PH+6FVt7
      H7949wrqqIvAERb5n//q10T9u+SkGsw6Fal0ilReiqbE4tqnV9AikdHd1QZA/+mTbLmD9J/p
      QczEcLg9dJ7swe7wcHZgAL1SjqAuv0z4WcGxMkMSGYvT00QMEvaDMaw951EcuLh5b5OiuYNu
      Sykl2CL2pWlyMiUzE1OcuXCZ5cm7WE6c55XL3XxxaxBFQy8tulJiJ5H1+UlEtZqJsSlq5Wl8
      kRQtZy7x8kArN4e+RNUxQJ2ifAdIBjz0Pv86WrkEr2OTuXUX2p6L1B0hxNtz7+DZ3eONn16h
      VZvhy/s3sfRdxlLiE/3/AMdKGe96XBSRAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Weekly Scoring by Episode' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
